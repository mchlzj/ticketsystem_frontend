[{"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx":"1","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx":"3","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx":"4","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx":"5","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx":"6","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx":"7","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx":"8","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx":"9","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx":"10","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js":"11","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts":"12","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx":"13","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx":"14","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx":"15","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx":"16","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx":"17","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx":"18","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx":"19","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx":"20","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx":"21","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx":"22","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx":"23","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx":"24","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx":"25","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx":"26","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx":"27","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx":"28","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx":"29","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx":"30","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx":"31","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx":"32","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx":"33","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx":"34","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx":"35","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx":"36","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx":"37","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx":"38"},{"size":1615,"mtime":1619863881329,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":1898,"mtime":1620158225388,"results":"42","hashOfConfig":"40"},{"size":378,"mtime":1619341753468,"results":"43","hashOfConfig":"40"},{"size":763,"mtime":1619341753473,"results":"44","hashOfConfig":"40"},{"size":372,"mtime":1619340566134,"results":"45","hashOfConfig":"40"},{"size":370,"mtime":1619720073442,"results":"46","hashOfConfig":"40"},{"size":388,"mtime":1619863881336,"results":"47","hashOfConfig":"40"},{"size":401,"mtime":1619340566108,"results":"48","hashOfConfig":"40"},{"size":380,"mtime":1619873469010,"results":"49","hashOfConfig":"40"},{"size":1958,"mtime":1619341753475,"results":"50","hashOfConfig":"40"},{"size":1198,"mtime":1619341753462,"results":"51","hashOfConfig":"40"},{"size":738,"mtime":1619341753460,"results":"52","hashOfConfig":"40"},{"size":762,"mtime":1619341753471,"results":"53","hashOfConfig":"40"},{"size":3442,"mtime":1620162707030,"results":"54","hashOfConfig":"40"},{"size":3161,"mtime":1620164073217,"results":"55","hashOfConfig":"40"},{"size":7859,"mtime":1620075202171,"results":"56","hashOfConfig":"40"},{"size":1692,"mtime":1620067957582,"results":"57","hashOfConfig":"40"},{"size":2193,"mtime":1619878546549,"results":"58","hashOfConfig":"40"},{"size":3356,"mtime":1620155875985,"results":"59","hashOfConfig":"40"},{"size":7752,"mtime":1620155876001,"results":"60","hashOfConfig":"40"},{"size":9987,"mtime":1620155875979,"results":"61","hashOfConfig":"40"},{"size":3823,"mtime":1620155875990,"results":"62","hashOfConfig":"40"},{"size":3413,"mtime":1620155875996,"results":"63","hashOfConfig":"40"},{"size":1038,"mtime":1619873469011,"results":"64","hashOfConfig":"40"},{"size":950,"mtime":1620155875888,"results":"65","hashOfConfig":"40"},{"size":995,"mtime":1620155875972,"results":"66","hashOfConfig":"40"},{"size":1355,"mtime":1620155875900,"results":"67","hashOfConfig":"40"},{"size":377,"mtime":1619340566106,"results":"68","hashOfConfig":"40"},{"size":5773,"mtime":1620162073033,"results":"69","hashOfConfig":"40"},{"size":3813,"mtime":1620155875892,"results":"70","hashOfConfig":"40"},{"size":3907,"mtime":1620067871721,"results":"71","hashOfConfig":"40"},{"size":2742,"mtime":1620067871732,"results":"72","hashOfConfig":"40"},{"size":1984,"mtime":1619873469012,"results":"73","hashOfConfig":"40"},{"size":1423,"mtime":1620067279393,"results":"74","hashOfConfig":"40"},{"size":1536,"mtime":1619340566108,"results":"75","hashOfConfig":"40"},{"size":5203,"mtime":1620163561957,"results":"76","hashOfConfig":"40"},{"size":364,"mtime":1619701568950,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1ged5a1",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"81"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"81"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"81"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx",["176"],"// import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {TicketsProvider} from './pages/AllTickets/TicketsContext';\r\nimport {TicketProvider} from './components/Ticket/TicketContext';\r\nimport {MobileOpenProvider} from './components/Drawer/MobileOpenContext';\r\nimport { LoginProvider } from './util/LoginContext';\r\nimport {UserNameProvider} from './util/UserCredsContext';\r\nimport {UserRoleProvider} from './util/UserCredsContext';\r\nimport {CommentsProvider} from './components/Comments/CommentContext';\r\nimport {ModulesProvider} from './pages/NewTicket/ModulesContext';\r\nimport {DocumentsProvider} from './pages/NewTicket/DocumentsContext';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <LoginProvider>\r\n    <UserNameProvider> \r\n      <UserRoleProvider>\r\n        <TicketsProvider>\r\n          <MobileOpenProvider>\r\n            <CommentsProvider>\r\n              <ModulesProvider>\r\n                <DocumentsProvider>\r\n                  <App />\r\n                </DocumentsProvider>\r\n              </ModulesProvider>\r\n            </CommentsProvider>\r\n          </MobileOpenProvider>\r\n        </TicketsProvider>\r\n      </UserRoleProvider>\r\n    </UserNameProvider>\r\n  </LoginProvider>,\r\n    //,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["177","178"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js",[],["179","180"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx",["181","182","183"],"import {useContext, useEffect} from 'react';\r\nimport {getAllTickets} from './util/ApiCalls';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Ticket from './components/Ticket/Ticket';\r\nimport Navigation from './layouts/Navigation/Navigation';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AllTickets from './pages/AllTickets/AllTickets';\r\nimport NewTicket from './pages/NewTicket/NewTicket';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport MeineTickets from './pages/MeineTickets/MeineTickets';\r\nimport MirZugewieseneTickets from './pages/MirZugewieseneTickets/MirZugewieseneTickets';\r\nimport {TicketsContext} from './pages/AllTickets/TicketsContext';\r\nimport {LoginContext} from './util/LoginContext';\r\nimport auth from './util/auth'\r\nimport {UserNameContext, UserRoleContext} from './util/UserCredsContext';\r\nimport {ModulesContext} from './pages/NewTicket/ModulesContext';\r\nimport {getUserName,  getUserCredentials} from './util/UserCreds';\r\nimport {DocumentsContext} from './pages/NewTicket/DocumentsContext';\r\n\r\n\r\n// import ApiPreCalls from './ApiCalls/ApiPreCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const [tickets,setTickets] = useContext(TicketsContext);\r\n  const [isLoggedIn, setIsLoggedIn] = useContext(LoginContext);\r\n  const [userName,] = useContext(UserNameContext);\r\n  const [userRole, setUserRole] = useContext(UserRoleContext);\r\n  const [moduls,setModules] = useContext(ModulesContext);\r\n  const [documents,setDocuments] = useContext(DocumentsContext);\r\n\r\n\r\n  useEffect(() => {\r\n    getAllTickets()\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n    console.log(\"Api Call from App\");\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, []) \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      setIsLoggedIn(true);\r\n    }\r\n    console.log(isLoggedIn);\r\n    console.log(auth.getUserRole());\r\n    console.log(userName);\r\n    console.log(getUserCredentials());\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n  return (\r\n\r\n    <div className= {classes.root}>\r\n        <Router>\r\n          <Navigation history={props.history}/> \r\n          <main className={classes.content}>               \r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n              \r\n              <Route path=\"/newticket\" render={() => <NewTicket moduls={moduls} setModules={setModules} documents={documents} setDocuments={setDocuments}/>}/>\r\n              <Route path=\"/ticketSuchen\" exact render={() => <AllTickets />}/>\r\n              <Route path=\"/ticketSuchen/:id\" component={Ticket}/>\r\n              <Route path=\"/meineTickets\" render={() => <MeineTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n              <Route path=\"/statistics\" component={Statistics}/>\r\n              <Route path=\"/MirZugewieseneTickets\" render={() => <MirZugewieseneTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n          </Switch>\r\n          </main>    \r\n        </Router>            \r\n      </div>       \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx",["184","185","186","187","188"],"import {useState, useContext, useEffect} from 'react';\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {login} from '../../util/ApiCalls';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Paper } from '@material-ui/core';\r\nimport Background from '../../../public/media/BackgroundLogin.jpg'\r\nimport {UserRoleContext} from '../../util/UserCredsContext';\r\nimport auth from '../../util/auth'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        // width: '25ch',\r\n      },\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n\r\n        width: '50vh',\r\n        padding: '10px',\r\n    },\r\n    inputField: {\r\n        display: 'inline'\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    background: {\r\n      // '& .MuiTextField-root': {\r\n      //   margin: theme.spacing(1),\r\n      //   width: '25ch',\r\n      // },\r\n        margin: 'auto',\r\n        width: '100%',\r\n        height: '100vh',\r\n        padding: '10px',\r\n        background: \"url('/media/BackgroundLogin.jpg')\",\r\n        // minWidth: '1024px',\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n\r\n  const [userName, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [userRole, setUserRole] = useContext(UserRoleContext);\r\n\r\nconst handleLogin = async() => {\r\n  \r\n    login(userName, password)\r\n        .then(res => {\r\n            localStorage.setItem('token', res.token);    \r\n        })\r\n        .then(e => {\r\n            props.history.push('/ticketSuchen');\r\n        }).catch(e => alert(\"invalid Username or Password\"))\r\n}\r\n\r\nconst handleUserNameChange = ({target}) => {\r\n    setUserName(target.value);\r\n};\r\nconst handlePasswordChange = ({target}) => {\r\n    setPassword(target.value);\r\n};\r\n\r\n  return (\r\n    <Paper className={classes.background}>\r\n    <form  className= {classes.root} noValidate autoComplete=\"off\">\r\n     \r\n      <Card>\r\n      <CardMedia\r\n          className={classes.media}\r\n          image=\"/media/LogoLogin.JPG\"\r\n          title=\"LogoLogin\"\r\n        />\r\n      <Grid\r\n  container\r\n  direction=\"column\"\r\n  justify=\"center\"\r\n  alignItems=\"center\"\r\n>\r\n        <TextField\r\n          required\r\n          id=\"Benutzername\"\r\n          label=\"Benutzername\"\r\n          variant=\"outlined\"\r\n          onChange={handleUserNameChange}\r\n        />\r\n        <TextField\r\n        required\r\n          id=\"Passwort\"\r\n          label=\"Passwort\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          onChange={handlePasswordChange}\r\n        />\r\n      <Button variant=\"contained\" \r\n      color=\"secondary\" \r\n      disableElevation\r\n      onClick={handleLogin}\r\n      fullWidth>\r\n        Login\r\n      </Button>\r\n        </Grid>\r\n      </Card>\r\n    </form>\r\n          </Paper>\r\n\r\n\r\n    \r\n  );\r\n}\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx",["189"],"\r\nconst url = 'http://localhost:59543/api/';\r\n//https://www.hetfeld.name/ticket_backend/api/\r\n//http://localhost:59543/api/\r\n//https://easyticketapi.azurewebsites.net\r\n\r\n//Login und Register\r\nexport const login = async(userName, password) => {\r\n    const response = await fetch(url + 'auth/login',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n          userName: userName,\r\n          password: password\r\n              }), \r\n      mode: 'cors',\r\n      headers: {\r\n              'Access-Control-Allow-Origin': 'https://easyticketapi.azurewebsites.net',\r\n              'Content-Type' : 'application/json'\r\n          }\r\n  });\r\n  try {\r\n      console.log(response);\r\n      if (response.ok) {\r\n          const jsonResponse = await response.json();\r\n          return jsonResponse;\r\n      }\r\n      throw new Error(\"Login failed\");\r\n    }catch(error) {\r\n        console.log(\"invalid login\");\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n//Tickets abrufen\r\nexport const getAllTickets = async() => {\r\n    const response = await fetch(url + 'tickets',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n//Tickets suchen\r\nexport const getTicketsByTitle = async(title) => {\r\n    if (title !== '' && title !== null) {\r\n        const response = await fetch(url + 'Tickets/SearchByTitle/' + title,\r\n        {\r\n            headers: {\r\n                    'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        }\r\n        );\r\n        try {\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse;\r\n            }\r\n            throw new Error('Request Failed!');\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCommentByTicketId = async(TicketId) => {\r\n    const response = await fetch(url + 'Comments/GetByTicketId/' + TicketId,\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsImZeitverlauf = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketTimeline/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsNachModulen = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketsPerModule/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n//Ticket erstellen\r\n// export const sendData = async( title, description) => {\r\n//     await fetch(url  + 'tickets',\r\n//     {\r\n//         method: 'POST',\r\n//         body: JSON.stringify({\r\n//             title: title,\r\n//             description: description,\r\n//             createdBy: {\r\n//                 // userName: creator\r\n//             }\r\n//         }), \r\n//         mode: 'cors',\r\n//         headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n//             }\r\n//     });\r\n// }\r\n\r\nexport const getTicketById = async(id) => {\r\n    const response = await fetch(url + `Tickets/${id}`, \r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const newComment = async( ticketID, text) => {\r\n    await fetch(url  + 'Comments',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            ticketID: ticketID,\r\n            text: text            \r\n        }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n    }\r\nexport const createNewTicket = async(title, description, documentId) => {\r\n    const response = await fetch(url + 'Tickets',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            documentId: documentId\r\n            }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n}\r\n\r\n\r\n// export const removeComment = async( ticketID, text) => {\r\n//     await fetch(url  + 'Comments',\r\n//     {\r\n//         method: 'POST',\r\n//         body: JSON.stringify({\r\n//             ticketID: ticketID,\r\n//             text: text            \r\n//         }), \r\n//         mode: 'cors',\r\n//         headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n//             }\r\n//     });\r\n// }\r\n\r\nexport const getModules = async() => {\r\n    const response = await fetch(url + 'Modules',\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};\r\n\r\n\r\nexport const getDocuments = async( moduleId ) => {\r\n    const response = await fetch(url + `Documents/GetByModuleId/${moduleId}`,\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};\r\n\r\nexport const changeTicketStatus = async( ticketId ) => {\r\n    const response = await fetch(url + `Tickets/ChangeStatus/${ticketId}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx",["190"],"import React from 'react'\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport TicketsZeitverlauf from '../../components/Charts/TicketsZeitverlauf';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TicketsNachModulen from '../../components/Charts/TicketsNachModulen';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      },\r\n      root: {\r\n          display: 'flex',\r\n      }\r\n    }),\r\n  );\r\n\r\n\r\nfunction Statistics() {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>\r\n            <Grid item xs={'auto'}>\r\n            <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                Anzahl erstellter Tickets im Zeitverlauf\r\n            </Typography>\r\n            <TicketsZeitverlauf/>\r\n            </Grid>\r\n            <Grid item xs={12} />\r\n            <Grid item xs={'auto'}>\r\n            <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                Gesamtzahl erstellter Tickets pro Modul\r\n            </Typography>\r\n            <NewElementButton/>\r\n            <TicketsNachModulen/>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx",["191","192","193"],"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport {AnchorElProvider} from '../../components/AppBar/AnchorElContext';\r\n\r\nimport DrawerPermanent from '../../components/Drawer/DrawerPermanent';\r\nimport DrawerMobile from '../../components/Drawer/DrawerMobile';\r\nimport AppBar from '../../components/AppBar/AppBar';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport '../../style-theme'\r\nimport { theme } from '../../style-theme';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    drawer: {\r\n      [theme.breakpoints.up('md')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up('md')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport default function Navigation(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div>\r\n      <CssBaseline />\r\n      <AnchorElProvider>\r\n        <AppBar/>\r\n      </AnchorElProvider>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden mdUp >\r\n          <DrawerMobile history={props.history}/>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <DrawerPermanent history={props.history}/>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx",["194","195","196","197","198","199","200"],"import {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\nimport { css } from \"@emotion/core\";\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {getUserName, getUserCredentials} from '../../util/UserCreds';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {TicketsContext} from './TicketsContext';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\n\r\n\r\n\r\nexport default function AllTickets() {\r\n\r\n// Initialisation of different context variables which are necessary for ticket data.\r\n    const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n// Get all Tickets from database and set related variables.\r\n    useEffect(() => {\r\n      getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n        console.log(data);\r\n      })\r\n      .then(() => setIsLoading(false))\r\n      console.log(\"Api Call from AllTickets\");\r\n      console.log(getUserName());      \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n// Style definition\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n// Returning AllTickets site\r\n  return (  \r\n    <div> \r\n\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n        <Grid item>\r\n          <MailIcon fontSize='large'/>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n          &nbsp; Alle Tickets\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    <div>\r\n      {isLoading ? null :\r\n        <Grid container \r\n          justify=\"space-around\"\r\n          alignItems=\"flex-start\" \r\n          spacing={4}>\r\n          {tickets.map(ticket => (\r\n            <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n              <TicketCard \r\n              id={ticket.id}\r\n              title={ticket.title} \r\n                description={ticket.description} \r\n                ticketClosed={ticket.ticketClosed}\r\n                createdBy={ticket.createdBy.userName}\r\n                modul={ticket.document.module.name}\r\n                document={ticket.document.name}\r\n                />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n}\r\n</div>\r\n  <NewElementButton/>\r\n  <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n    <CircularProgress color=\"inherit\" />\r\n  </Backdrop>\r\n</div>\r\n\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx",["201","202","203","204","205","206"],"import {useState, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {createNewTicket} from '../../util/ApiCalls';\r\nimport auth from '../../util/auth'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Box from '@material-ui/core/Box'\r\nimport {getModules, getDocuments} from '../../util/ApiCalls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    title: {\r\n        width: '50ch'\r\n    },\r\n    description: {\r\n        width: '150ch',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fab: {\r\n      textTransform: 'none',\r\n      marginTop: 20,\r\n    },\r\n    selected: {\r\n      backgroundColor: \"grey !important\",\r\n      color: \"white\",\r\n      fontWeight: 600\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function NewTicket({moduls, setModules, documents, setDocuments}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [titleValue, setTitleValue] = useState('');\r\n    const [descriptionValue, setDescriptionValue] = useState('');\r\n    const [modul, setModuleValue] = useState('');\r\n    const [document, setDocumentValue] = useState('');\r\n\r\n\r\n    /*var moduleArray;\r\n    const promiseAllModules = getModules();\r\n \r\n    promiseAllModules.then(function(result) {\r\n      moduleArray = result\r\n      console.log(moduleArray);\r\n    });*/\r\n\r\n    useEffect(() => {\r\n      getModules()\r\n      .then(data => {\r\n        setModules(data);\r\n      })\r\n      .then(() => console.log(moduls)); \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      getDocuments(modul)\r\n      .then(data => {\r\n        setDocuments(data);\r\n      })\r\n      .then(() => console.log(documents)); \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    /*useEffect(() => {\r\n      console.log(auth.getUserRole());\r\n    })*/\r\n\r\n    const handleModuleChange = ({target}) => {\r\n      getDocuments(target.value)\r\n      .then(data => {\r\n        setDocuments(data);\r\n      })\r\n      setModuleValue(target.value);\r\n    };\r\n\r\n    const handleDocumentChange = ({target}) => {\r\n      setDocumentValue(target.value);\r\n    };\r\n\r\n    const handleChangeDescription = ({target}) => {\r\n        setDescriptionValue(target.value);\r\n    };\r\n    const handleChangeTitle = ({target}) => {\r\n        setTitleValue(target.value);\r\n    };\r\n\r\n    const submitTicket = () => {\r\n        if (titleValue!=\"\" && descriptionValue!=\"\" && document!=\"\") {\r\n        createNewTicket( titleValue , descriptionValue, document)\r\n          .then(success => {\r\n            alert('Neues Ticket erfolgreich erstellt!');\r\n            history.push('/ticketSuchen');\r\n          });\r\n        } else {\r\n          alert('Bitte alle Felder ausfüllen!');\r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n      <div>\r\n\r\n        <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <CreateIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Neues Ticket erstellen\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n          <Grid item xs={\"auto\"}>\r\n            <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black'}}>\r\n              <CardContent>\r\n                <Grid container justify=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Titel\r\n                    </Box>\r\n                    </Typography>\r\n                    <TextField id=\"title_textfield\" fullWidth={true} label=\"Titel eingeben...\" variant=\"outlined\" value={titleValue} onChange={handleChangeTitle}/>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Beschreibung\r\n                    </Box>\r\n                    </Typography>\r\n                    <TextField id=\"description_textfield\" fullWidth={true} value={descriptionValue} onChange={handleChangeDescription} multiline={true} label=\"Beschreibung eingeben...\" variant=\"outlined\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Modul\r\n                    </Box>\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"select-module-label\">&nbsp; Modul auswählen...</InputLabel>\r\n                      <Select labelId=\"select-module-label\" id=\"select-module\" variant=\"outlined\" value={modul} onChange={handleModuleChange}>\r\n                      {\r\n                      moduls?.map((item) => {\r\n                        return (\r\n                          <MenuItem key={item.id} value={item.id} selected classes={{ selected: classes.selected }}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"select-document-label\">&nbsp; Format auswählen...</InputLabel>\r\n                      <Select labelId=\"select-document-label\" id=\"select-document\" variant=\"outlined\" value={document} onChange={handleDocumentChange}>\r\n                      {\r\n                      documents?.map((item) => {\r\n                        return (\r\n                          <MenuItem key={item.id} value={item.id} selected classes={{ selected: classes.selected }}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" className={classes.fab} onClick={submitTicket}>\r\n          &nbsp; Fertig &nbsp; \r\n          <CheckCircleIcon />\r\n        </Fab>\r\n              </CardContent>\r\n            </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import {useState,useEffect, useContext} from 'react'\r\nimport {CommentsContext} from '../Comments/CommentContext';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {getTicketById, changeTicketStatus, getCommentByTicketId} from '../../util/ApiCalls';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Divider } from '@material-ui/core';\r\nimport classes from '*.module.css';\r\nimport { AutoSizer } from '@material-ui/data-grid';\r\nimport Comments from '../Comments/Comments';\r\nimport NewComment from '../Comments/NewComment';\r\nimport {TicketContext} from './TicketContext';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Box from '@material-ui/core/Box'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport auth from '../../util/auth'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Style definition\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    title: {\r\n        width: '50ch'\r\n    },\r\n    description: {\r\n        width: '150ch',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n      textTransform: 'none'\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nfunction Ticket({match}) {\r\n\r\n// Initialisation of different context variables \r\n// which are necessary for getting and setting the ticket data.\r\n    const [ticket, setTicket] = useState<any>();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [comments, setComments] = useContext(CommentsContext);\r\n    const [status, setStatusValue] = useState<any>();\r\n    const classes = useStyles();\r\n\r\n    var statusIsChanged=false;\r\n\r\n// Load Ticket with specific id from database and set the related variables.\r\n    useEffect(() => {\r\n        getTicketById(match.params.id)\r\n        .then(data => {\r\n          setTicket(data);\r\n          setStatusValue(data.ticketClosed);\r\n          console.log(data.ticketClosed);\r\n        })\r\n        .then(() => {\r\n          setIsLoading(false);\r\n        })\r\n        console.log('Called Ticket with Id ' + match.params.id);\r\n    },[match.params.id])\r\n\r\n// Function for Switch-Status-Button which instantly updates the status param in the database.\r\n    const handleStatusSwitch = (event) => {\r\n      setStatusValue(event.target.checked);\r\n      changeTicketStatus(ticket.id);\r\n    };\r\n\r\n\r\n// Returning the ticket component\r\n    return (\r\n      <div>\r\n        {isLoading ? <h1></h1> : \r\n          <div>\r\n\r\n            <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n              <Grid item>\r\n                <CreateIcon fontSize='large'/>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n                &nbsp; Ticketübersicht\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n              <Grid item xs={\"auto\"}>\r\n                <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black'}}>\r\n                  <CardContent>\r\n                    <Grid container justify=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Titel\r\n                        </Box>\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.title}\r\n                        </Box>\r\n                        </Typography>                  \r\n                        </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Beschreibung\r\n                        </Box>\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.description}\r\n                        </Box>\r\n                        </Typography>                    \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Modul\r\n                        </Box>\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.document.module.name}\r\n                        </Box>\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Format\r\n                        </Box>\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.document.name}\r\n                        </Box>\r\n                        </Typography>  \r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Ersteller\r\n                        </Box>\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.createdBy.userName}\r\n                        </Box>\r\n                        </Typography>  \r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                          Status\r\n                        </Box>\r\n                        </Typography>\r\n                        {\r\n                          ticket.document.module.responsible.userName===auth.getUserName() ?\r\n                          <FormGroup>\r\n                            <FormControlLabel label={status ? \"Geschlossen\" : \"Offen\"} control={<Switch\r\n                          checked={status}\r\n                          onChange={handleStatusSwitch}\r\n                          name=\"checkedA\"\r\n                          inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        />}/>\r\n                          </FormGroup> :\r\n                        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                        <Box fontSize={18}>\r\n                          {ticket.ticketClosed ? \"Geschlossen\" : \"Offen\"}\r\n                        </Box>\r\n                        </Typography>\r\n                        }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider variant=\"middle\"/>\r\n                    <Comments ticketID={ticket.id}/>\r\n                  </CardContent>\r\n                </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n        <Box fontSize={18}>\r\n        Das Ticket wurde am {ticket.createdDate.split('T')[0].split('-')[2]}.{ticket.createdDate.split('T')[0].split('-')[1]}.{ticket.createdDate.split('T')[0].split('-')[0]} erstellt und zuletzt am {ticket.lastChangedDate.split('T')[0].split('-')[2]}.{ticket.lastChangedDate.split('T')[0].split('-')[1]}.{ticket.lastChangedDate.split('T')[0].split('-')[0]} um {ticket.lastChangedDate.split('T')[1].split(':')[0]}:{ticket.lastChangedDate.split('T')[1].split(':')[1]} Uhr geändert.\r\n        </Box>\r\n        </Typography>\r\n  </div>}\r\n\r\n  <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n    <CircularProgress color=\"inherit\" />\r\n  </Backdrop>\r\n\r\n</div>\r\n\r\n)}\r\n\r\nexport default Ticket\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx",["224","225","226","227","228","229"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {UserNameContext, UserRoleContext} from '../../util/UserCredsContext';\r\nimport auth from '../../util/auth';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function MeineTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n          console.log(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\");\r\n    }, [setTickets])\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n\r\n    // const columns: ColDef[] = [\r\n    //     { field: 'id', headerName: 'ID', width: 70 },\r\n    //     { field: 'title', headerName: 'Titel', width: 260 },\r\n    //     { field: 'description', headerName: 'Beschreibung', width: 390 },\r\n    //     { field: 'lastChangedDate', headerName: 'Änderungsdatum', width: 260 },\r\n    //   ];\r\n      \r\n\r\n    const myTickets = tickets.filter(ticket => ticket.createdBy.userName === userName\r\n      );\r\n\r\n    return (  \r\n      <div> \r\n      {/*<TicketSearchBar/>*/}\r\n\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Meine Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? null :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {myTickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard\r\n      id={ticket.id}\r\n      title={ticket.title} \r\n      description={ticket.description} \r\n      ticketClosed={ticket.ticketClosed}\r\n      createdBy={ticket.createdBy.userName}\r\n      modul={ticket.document.module.name}\r\n      document={ticket.document.name}\r\n        />\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n   \r\n}\r\n\r\n  <NewElementButton/>\r\n  <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n    </div>\r\n\r\n    // <div style={{ height: 400, width: '100%' }}>\r\n    //   <DataGrid rows={tickets} columns={columns} pageSize={5} />\r\n    // </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx",["230","231","232","233","234"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport auth from '../../util/auth';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {UserNameContext, UserRoleContext} from '../../util/UserCredsContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function MirZugewieseneTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        // .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\"); \r\n              // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      console.log(userName);\r\n    }, [userName])\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n    const myTickets = tickets.filter(ticket => ticket.document.module.responsible.userName === userName\r\n      );\r\n\r\n\r\n    return (  \r\n      <div> \r\n        {/*<TicketSearchBar/>*/}\r\n\r\n        <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Mir zugewiesene Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? null :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {myTickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard \r\n      id={ticket.id}\r\n      title={ticket.title} \r\n      description={ticket.description} \r\n      ticketClosed={ticket.ticketClosed}\r\n      createdBy={ticket.document.module.responsible.userName}\r\n      modul={ticket.document.module.name}\r\n      document={ticket.document.name}\r\n        />\r\n\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n}\r\n\r\n<Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx",["235","236","237","238"],"import React ,{useEffect, useContext} from 'react'\r\nimport {CommentsContext} from './CommentContext';\r\nimport Comment from './Comment';\r\nimport NewComment from './NewComment';\r\nimport {getTicketById, changeTicketStatus, getCommentByTicketId} from '../../util/ApiCalls';\r\nimport {alterInMs} from '../../util/Date';\r\n\r\nfunction Comments({ticketID}) {\r\n    \r\n    const [comments, setComments] = useContext(CommentsContext);\r\n\r\n    useEffect(() => {\r\n        getCommentByTicketId(ticketID)\r\n            .then(data => {\r\n                setComments(data);\r\n                console.log(data);\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <NewComment ticketID={ticketID}/>\r\n            {comments.map(comment => (\r\n                <Comment \r\n                key={comment.id} \r\n                commentText={comment.text} \r\n                commentCreator={comment.createdBy.userName}\r\n                commentDate={comment.createdDate}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx",["239","240","241","242","243","244","245","246","247","248"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport  {UserMenuId} from './MenuUser';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {MobileOpenContext} from '../Drawer/MobileOpenContext';\r\nimport {AnchorElContext} from './AnchorElContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TicketsContext } from '../../pages/AllTickets/TicketsContext';\r\nimport {getTicketsByTitle, getAllTickets} from '../../util/ApiCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      // position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: theme.spacing(2),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n      justifySelf: 'center'\r\n    },\r\n    searchIcon: {\r\n      // padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n\r\n\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(2, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 101,\r\n      // [theme.breakpoints.up('md')]: {\r\n      //   width: `calc(100% - ${drawerWidth}px)`,\r\n      //   marginLeft: drawerWidth,\r\n      // },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n\r\n  }),\r\n);\r\n\r\n\r\nfunction StyledAppBar() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  // Auskommentiert, da sich der Z-Index des Menüs irgendwie nicht ändern lässt\r\n  const [, setAnchorEl] = React.useContext(AnchorElContext);\r\n  const [tickets, setTickets] = useContext(TicketsContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  useEffect(() => {\r\n    title === '' ?\r\n    getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n      })\r\n      :\r\n    getTicketsByTitle(title)\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n  }, [title])\r\n\r\n  const goToSearch = () => {\r\n    history.push('/ticketSuchen');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Easy-Ticket\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          <div className={classes.search}>\r\n            {/* <IconButton color=\"primary\" aria-label=\"search\">\r\n              {/* <SearchIcon /> */}\r\n            {/* </IconButton> */} \r\n            <InputBase\r\n              placeholder=\"Ticket suchen...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearch}\r\n              onClick={goToSearch}\r\n            />\r\n          </div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={UserMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <img src=\"/media/IconIU.jpg\" height=\"30\"/>\r\n\r\n              {/* <AccountCircle /> */}\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Irgendwie lässt sich der Z-Index des Menüs nicht ändern. Deshalb erstmal auskommentiert. */}\r\n      {/* <MenuUser/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StyledAppBar;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx",["249"],"// import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box'\r\n\r\n// Style definition\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      marginLeft: theme.spacing(1)\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    }\r\n  }),\r\n);\r\n\r\n\r\n\r\nexport default function TicketCard({title, description, ticketClosed, id, createdBy, \r\n                                    modul, document\r\n                                   }) {\r\n  const classes = useStyles();\r\n\r\n// Returning the Ticket-Card-Component\r\n  return (\r\n    <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black' }}>\r\n      <Link className={classes.link} to={`/ticketSuchen/${id}`}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Titel\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"secondary\">\r\n                <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {title}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Modul\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {modul}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Format\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {document}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Status\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {ticketClosed ? \"✓\" : \"⨯\"}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx",["250","251","252","253"],"import React, {useState, useEffect} from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {getTicketsNachModulen} from '../../util/ApiCalls';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\ncreateStyles({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    textTransform: 'none'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  container: {\r\n    width: '50',\r\n    height: '200'\r\n  }\r\n}),\r\n);\r\n\r\n\r\n  function TicketsNachModulen() {\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsNachModulen();\r\n      // console.log(result);\r\n      result.forEach(element => {\r\n        labels.push(element.modulName);\r\n        openTickets.push(element.openTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    const dataOpen = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'geöffnete Tickets',\r\n          data: openTickets,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n          ],\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    const dataClosed = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'geöffnete Tickets',\r\n            data: openTickets,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            fill: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {/* <article height='60vh'> */}\r\n      <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>\r\n      <Grid item xs={'auto'}>\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n                Offene Tickets\r\n    </Typography>\r\n      {/*<canvas id=\"middle\" width='800' height='40'></canvas>*/}\r\n      <Pie data={dataOpen}/>\r\n      </Grid>\r\n      <Grid item xs={'auto'}>\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            Geschlossene Tickets\r\n    </Typography>\r\n      {/*<canvas id=\"middle\" width='800' height='40'></canvas>*/}\r\n      <Pie data={dataClosed}/>\r\n      </Grid>\r\n      {/* </article> */}\r\n      </Grid>\r\n      </div>\r\n    );\r\n  } \r\n    \r\n\r\n\r\nexport default TicketsNachModulen","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx",["254","255","256"],"\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport {getTicketsImZeitverlauf} from '../../util/ApiCalls';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\ncreateStyles({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    textTransform: 'none'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  container: {\r\n    width: '50',\r\n    height: '200'\r\n  }\r\n}),\r\n);\r\n\r\n\r\n  function TicketsZeitverlauf() {\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsImZeitverlauf();\r\n      // console.log(result);\r\n      result.forEach(element => {\r\n        labels.push(element.month);\r\n        openTickets.push(element.openedTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'geöffnete Tickets',\r\n          data: openTickets,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'geschlossene Tickets',\r\n          data: closedTickets,\r\n          backgroundColor: 'rgb(54, 162, 235)',\r\n          borderColor: 'rgba(54, 162, 235, 0.2)',\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      // responsive: true,\r\n      // maintainAspectRatio: false,\r\n      pugins: {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Anzahl der erstellten Tickets im Zeitverlauf'\r\n        },\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n\r\n    return (\r\n      <div >\r\n        \r\n      {/*<canvas id=\"top\" width='800' height='20'></canvas>\r\n       <article height='60vh'> */}\r\n      <Line data={data} options={options} />\r\n      {/* </article> \r\n      <canvas id=\"middle\" width='800' height='40'></canvas>*/}\r\n      </div>\r\n    );\r\n  } \r\n    \r\n\r\n\r\nexport default TicketsZeitverlauf\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx",["257","258","259","260","261","262","263"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {newComment} from '../../util/ApiCalls';\r\nimport {CommentsContext} from '../Comments/CommentContext';\r\nimport { isNullOrUndefined } from 'util';\r\nimport {getTicketById, changeTicketStatus, getCommentByTicketId} from '../../util/ApiCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nfunction NewComment({ticketID}) {\r\n    const classes = useStyles();\r\n    const [comment, setComment] = useState('');\r\n    const [comments, setComments] = useContext(CommentsContext);\r\n\r\n    const changeValue = (e) => {\r\n        setComment(e.target.value);\r\n        console.log(\"value on Change:\" + comment)\r\n    }\r\n    const handleSubmit = async() => {\r\n      console.log(\"value on submit\" + comment);\r\n        await newComment(ticketID, comment);\r\n        const data = await getCommentByTicketId(ticketID)\r\n        await setComments(data);\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Neuer Kommentar\"\r\n          multiline\r\n          rows={4}\r\n          size='small'\r\n          variant=\"outlined\"\r\n          onChange={changeValue}\r\n          value={comment}\r\n          fullWidth={true}\r\n        />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        endIcon={<SendIcon />}\r\n        onClick={handleSubmit}\r\n      >\r\n        Abschicken\r\n      </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewComment\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx",["264","265","266","267","268","269"],"import React ,{useEffect, useContext} from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {TicketContext} from '../Ticket/TicketContext';\r\n\r\nfunction Comment({commentText, commentCreator, commentDate}) {\r\n    const [ticket, setTicket] = useContext(TicketContext);\r\n\r\n    const dateString = Date.parse(commentDate);\r\n    const date = new Date(dateString);\r\n\r\n    const handleDelete = () => {\r\n\r\n        // ticket.comments.map(e => {\r\n        //     e.id !== comment.id\r\n        // });\r\n\r\n    }\r\n\r\n    return (\r\n        <Card >\r\n            <CardContent>\r\n                <div>\r\n\r\n                <Typography variant=\"body1\">\r\n                    {commentText}\r\n                </Typography>\r\n                <Typography display='inline' align='left' variant=\"caption\">\r\n                    von: {commentCreator} \r\n                </Typography>      \r\n                <br></br>\r\n                <Typography display='inline' align='right'variant=\"caption\"> \r\n                    Erstellt am : {date.toLocaleDateString()} um {date.toLocaleTimeString()}\r\n                </Typography> \r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx",["270"],"import  {useContext, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {MobileOpenContext} from './MobileOpenContext';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {Button, withStyles} from '@material-ui/core';\r\nimport {UserRoleContext} from '../../util/UserCredsContext';\r\nimport auth from '../../util/auth'\r\n\r\nfunction DrawerContent(props) {\r\n\r\n// Style definition\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    toolbar: theme.mixins.toolbar,\r\n    link: {\r\n      textDecoration: 'none'\r\n    }\r\n  }),\r\n);\r\n\r\n// Consts for setting and getting the saved context variables\r\nconst [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\nconst [userRole, setUserRole] = useContext(UserRoleContext);\r\n\r\n// Setting the current user role\r\nuseEffect(() => {\r\n  setUserRole(auth.getUserRole());\r\n},[])\r\n\r\nconst classes = useStyles();\r\n\r\nconst handleDrawerToggle = () => {\r\n  if (mobileOpen === true) {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n};\r\n\r\n// Logout function\r\nconst handleLogout = () => {\r\n  localStorage.removeItem('token');\r\n  props.history.push('/login');\r\n  setUserRole(auth.getUserRole());\r\n};\r\n\r\n// Styling of different used items\r\nconst StyledListItemText = withStyles({\r\n  root: {\r\n    color: \"white\",\r\n  },\r\n})(ListItemText);\r\n\r\nconst StyledListItemIcon = withStyles({\r\n  root: {\r\n    color: \"white\",\r\n  },\r\n})(ListItemIcon);\r\n\r\nconst StyledListItem = withStyles({\r\n  root: {\r\n    color: \"#EA5B0F\",\r\n    '&$selected': { \r\n      backgroundColor: \"#EA5B0F\", \r\n    }, \r\n  },\r\n})(ListItem);\r\n\r\n// Returning the drawer content\r\n  return (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List>\r\n            <Link className={classes.link} to=\"/newticket\" onClick={handleDrawerToggle}>\r\n            <StyledListItem button key='NeuesTicket'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/newticket\" ? {color: \"#EA5B0F\"} : {}}><InboxIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Neues Ticket' style={window.location.href===\"http://localhost:3000/newticket\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n            <Link className={classes.link} to=\"/ticketSuchen\" onClick={handleDrawerToggle}>\r\n              <StyledListItem button key='ticketSuchen'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/ticketSuchen\" ? {color: \"#EA5B0F\"} : {}}><MailIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Alle Tickets' style={window.location.href===\"http://localhost:3000/ticketSuchen\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <Link className={classes.link} to=\"/statistics\" onClick={handleDrawerToggle}>\r\n           <StyledListItem button key='Statistiken'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/statistics\" ? {color: \"#EA5B0F\"} : {}}><MailIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Statistiken' style={window.location.href===\"http://localhost:3000/statistics\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n            \r\n              <Link className={classes.link} to=\"/meineTickets\" onClick={handleDrawerToggle}>\r\n              <StyledListItem button key='meineTickets'>\r\n                   <StyledListItemIcon style={window.location.href===\"http://localhost:3000/meineTickets\" ? {color: \"#EA5B0F\"} : {}}><MailIcon /></StyledListItemIcon>\r\n                   <StyledListItemText primary='Meine Tickets' style={window.location.href===\"http://localhost:3000/meineTickets\" ? {color: \"#EA5B0F\"} : {}} />\r\n                 </StyledListItem>\r\n               </Link>\r\n               {userRole === 'Tutor' ?\r\n            <Link className={classes.link} to=\"/MirZugewieseneTickets\" onClick={handleDrawerToggle}>\r\n            <StyledListItem button key='MirZugewieseneTickets'>\r\n                 <StyledListItemIcon style={window.location.href===\"http://localhost:3000/MirZugewieseneTickets\" ? {color: \"#EA5B0F\"} : {}}><MailIcon /></StyledListItemIcon>\r\n                 <StyledListItemText primary='Mir zugewiesene Tickets' style={window.location.href===\"http://localhost:3000/MirZugewieseneTickets\" ? {color: \"#EA5B0F\"} : {}}/>\r\n               </StyledListItem>\r\n             </Link>\r\n             :\r\n             null\r\n          }\r\n            <Button variant=\"contained\" \r\n            color=\"primary\" \r\n            disableElevation\r\n            onClick={handleLogout}\r\n            >\r\n            Logout\r\n          </Button>\r\n          </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawerContent\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx",[],["271","272"],{"ruleId":"273","severity":1,"message":"274","line":7,"column":9,"nodeType":"275","messageId":"276","endLine":7,"endColumn":23},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"273","severity":1,"message":"281","line":17,"column":9,"nodeType":"275","messageId":"276","endLine":17,"endColumn":20},{"ruleId":"273","severity":1,"message":"282","line":42,"column":10,"nodeType":"275","messageId":"276","endLine":42,"endColumn":18},{"ruleId":"273","severity":1,"message":"283","line":42,"column":20,"nodeType":"275","messageId":"276","endLine":42,"endColumn":31},{"ruleId":"273","severity":1,"message":"284","line":1,"column":31,"nodeType":"275","messageId":"276","endLine":1,"endColumn":40},{"ruleId":"273","severity":1,"message":"285","line":9,"column":8,"nodeType":"275","messageId":"276","endLine":9,"endColumn":18},{"ruleId":"273","severity":1,"message":"286","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":12},{"ruleId":"273","severity":1,"message":"282","line":55,"column":10,"nodeType":"275","messageId":"276","endLine":55,"endColumn":18},{"ruleId":"273","severity":1,"message":"283","line":55,"column":20,"nodeType":"275","messageId":"276","endLine":55,"endColumn":31},{"ruleId":"273","severity":1,"message":"287","line":191,"column":11,"nodeType":"275","messageId":"276","endLine":191,"endColumn":19},{"ruleId":"273","severity":1,"message":"288","line":30,"column":11,"nodeType":"275","messageId":"276","endLine":30,"endColumn":18},{"ruleId":"273","severity":1,"message":"289","line":15,"column":8,"nodeType":"275","messageId":"276","endLine":15,"endColumn":11},{"ruleId":"273","severity":1,"message":"290","line":16,"column":8,"nodeType":"275","messageId":"276","endLine":16,"endColumn":15},{"ruleId":"273","severity":1,"message":"291","line":17,"column":10,"nodeType":"275","messageId":"276","endLine":17,"endColumn":20},{"ruleId":"273","severity":1,"message":"292","line":4,"column":10,"nodeType":"275","messageId":"276","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"293","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"294","line":7,"column":22,"nodeType":"275","messageId":"276","endLine":7,"endColumn":40},{"ruleId":"273","severity":1,"message":"289","line":10,"column":8,"nodeType":"275","messageId":"276","endLine":10,"endColumn":11},{"ruleId":"273","severity":1,"message":"290","line":12,"column":8,"nodeType":"275","messageId":"276","endLine":12,"endColumn":15},{"ruleId":"273","severity":1,"message":"295","line":17,"column":8,"nodeType":"275","messageId":"276","endLine":17,"endColumn":14},{"ruleId":"273","severity":1,"message":"296","line":59,"column":9,"nodeType":"275","messageId":"276","endLine":59,"endColumn":16},{"ruleId":"273","severity":1,"message":"295","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":14},{"ruleId":"273","severity":1,"message":"286","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":12},{"ruleId":"273","severity":1,"message":"297","line":14,"column":8,"nodeType":"275","messageId":"276","endLine":14,"endColumn":22},{"ruleId":"298","severity":1,"message":"299","line":115,"column":23,"nodeType":"300","messageId":"301","endLine":115,"endColumn":25},{"ruleId":"298","severity":1,"message":"299","line":115,"column":47,"nodeType":"300","messageId":"301","endLine":115,"endColumn":49},{"ruleId":"298","severity":1,"message":"299","line":115,"column":63,"nodeType":"300","messageId":"301","endLine":115,"endColumn":65},{"ruleId":"273","severity":1,"message":"302","line":4,"column":44,"nodeType":"275","messageId":"276","endLine":4,"endColumn":64},{"ruleId":"273","severity":1,"message":"303","line":9,"column":8,"nodeType":"275","messageId":"276","endLine":9,"endColumn":12},{"ruleId":"273","severity":1,"message":"304","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":15},{"ruleId":"273","severity":1,"message":"305","line":12,"column":10,"nodeType":"275","messageId":"276","endLine":12,"endColumn":19},{"ruleId":"273","severity":1,"message":"306","line":14,"column":8,"nodeType":"275","messageId":"276","endLine":14,"endColumn":18},{"ruleId":"273","severity":1,"message":"307","line":15,"column":9,"nodeType":"275","messageId":"276","endLine":15,"endColumn":22},{"ruleId":"273","severity":1,"message":"308","line":17,"column":8,"nodeType":"275","messageId":"276","endLine":17,"endColumn":19},{"ruleId":"273","severity":1,"message":"309","line":18,"column":8,"nodeType":"275","messageId":"276","endLine":18,"endColumn":14},{"ruleId":"273","severity":1,"message":"310","line":19,"column":8,"nodeType":"275","messageId":"276","endLine":19,"endColumn":23},{"ruleId":"273","severity":1,"message":"289","line":20,"column":8,"nodeType":"275","messageId":"276","endLine":20,"endColumn":11},{"ruleId":"273","severity":1,"message":"311","line":22,"column":8,"nodeType":"275","messageId":"276","endLine":22,"endColumn":17},{"ruleId":"273","severity":1,"message":"312","line":23,"column":8,"nodeType":"275","messageId":"276","endLine":23,"endColumn":18},{"ruleId":"273","severity":1,"message":"313","line":24,"column":8,"nodeType":"275","messageId":"276","endLine":24,"endColumn":16},{"ruleId":"273","severity":1,"message":"314","line":81,"column":12,"nodeType":"275","messageId":"276","endLine":81,"endColumn":20},{"ruleId":"273","severity":1,"message":"315","line":81,"column":22,"nodeType":"275","messageId":"276","endLine":81,"endColumn":33},{"ruleId":"273","severity":1,"message":"316","line":85,"column":9,"nodeType":"275","messageId":"276","endLine":85,"endColumn":24},{"ruleId":"317","severity":1,"message":"318","line":111,"column":22,"nodeType":"319","endLine":111,"endColumn":26},{"ruleId":"273","severity":1,"message":"293","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"320","line":7,"column":26,"nodeType":"275","messageId":"276","endLine":7,"endColumn":41},{"ruleId":"273","severity":1,"message":"289","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":11},{"ruleId":"273","severity":1,"message":"290","line":13,"column":8,"nodeType":"275","messageId":"276","endLine":13,"endColumn":15},{"ruleId":"321","severity":1,"message":"322","line":35,"column":8,"nodeType":"323","endLine":35,"endColumn":20,"suggestions":"324"},{"ruleId":"273","severity":1,"message":"325","line":55,"column":9,"nodeType":"275","messageId":"276","endLine":55,"endColumn":30},{"ruleId":"273","severity":1,"message":"293","line":7,"column":8,"nodeType":"275","messageId":"276","endLine":7,"endColumn":18},{"ruleId":"273","severity":1,"message":"320","line":8,"column":26,"nodeType":"275","messageId":"276","endLine":8,"endColumn":41},{"ruleId":"273","severity":1,"message":"289","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":11},{"ruleId":"273","severity":1,"message":"290","line":13,"column":8,"nodeType":"275","messageId":"276","endLine":13,"endColumn":15},{"ruleId":"273","severity":1,"message":"325","line":58,"column":9,"nodeType":"275","messageId":"276","endLine":58,"endColumn":30},{"ruleId":"273","severity":1,"message":"326","line":5,"column":9,"nodeType":"275","messageId":"276","endLine":5,"endColumn":22},{"ruleId":"273","severity":1,"message":"327","line":5,"column":24,"nodeType":"275","messageId":"276","endLine":5,"endColumn":42},{"ruleId":"273","severity":1,"message":"328","line":6,"column":9,"nodeType":"275","messageId":"276","endLine":6,"endColumn":18},{"ruleId":"321","severity":1,"message":"329","line":18,"column":7,"nodeType":"323","endLine":18,"endColumn":9,"suggestions":"330"},{"ruleId":"273","severity":1,"message":"331","line":7,"column":8,"nodeType":"275","messageId":"276","endLine":7,"endColumn":13},{"ruleId":"273","severity":1,"message":"332","line":9,"column":8,"nodeType":"275","messageId":"276","endLine":9,"endColumn":21},{"ruleId":"273","severity":1,"message":"333","line":10,"column":8,"nodeType":"275","messageId":"276","endLine":10,"endColumn":16},{"ruleId":"273","severity":1,"message":"334","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":25},{"ruleId":"273","severity":1,"message":"313","line":15,"column":8,"nodeType":"275","messageId":"276","endLine":15,"endColumn":16},{"ruleId":"273","severity":1,"message":"335","line":16,"column":8,"nodeType":"275","messageId":"276","endLine":16,"endColumn":12},{"ruleId":"273","severity":1,"message":"336","line":18,"column":8,"nodeType":"275","messageId":"276","endLine":18,"endColumn":18},{"ruleId":"273","severity":1,"message":"337","line":103,"column":10,"nodeType":"275","messageId":"276","endLine":103,"endColumn":17},{"ruleId":"321","severity":1,"message":"338","line":130,"column":6,"nodeType":"323","endLine":130,"endColumn":13,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":177,"column":15,"nodeType":"319","endLine":177,"endColumn":57},{"ruleId":"273","severity":1,"message":"303","line":10,"column":8,"nodeType":"275","messageId":"276","endLine":10,"endColumn":12},{"ruleId":"342","severity":1,"message":"343","line":4,"column":22,"nodeType":"275","messageId":"276","endLine":4,"endColumn":27},{"ruleId":"342","severity":1,"message":"344","line":33,"column":12,"nodeType":"275","messageId":"276","endLine":33,"endColumn":25},{"ruleId":"342","severity":1,"message":"288","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":18},{"ruleId":"321","severity":1,"message":"345","line":38,"column":15,"nodeType":"346","endLine":57,"endColumn":6},{"ruleId":"342","severity":1,"message":"343","line":5,"column":22,"nodeType":"275","messageId":"276","endLine":5,"endColumn":27},{"ruleId":"342","severity":1,"message":"288","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":18},{"ruleId":"321","severity":1,"message":"345","line":38,"column":15,"nodeType":"346","endLine":57,"endColumn":6},{"ruleId":"273","severity":1,"message":"284","line":1,"column":38,"nodeType":"275","messageId":"276","endLine":1,"endColumn":47},{"ruleId":"273","severity":1,"message":"347","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":12},{"ruleId":"273","severity":1,"message":"348","line":5,"column":8,"nodeType":"275","messageId":"276","endLine":5,"endColumn":16},{"ruleId":"273","severity":1,"message":"349","line":10,"column":10,"nodeType":"275","messageId":"276","endLine":10,"endColumn":27},{"ruleId":"273","severity":1,"message":"326","line":11,"column":9,"nodeType":"275","messageId":"276","endLine":11,"endColumn":22},{"ruleId":"273","severity":1,"message":"327","line":11,"column":24,"nodeType":"275","messageId":"276","endLine":11,"endColumn":42},{"ruleId":"273","severity":1,"message":"314","line":25,"column":12,"nodeType":"275","messageId":"276","endLine":25,"endColumn":20},{"ruleId":"273","severity":1,"message":"284","line":1,"column":16,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"350","line":5,"column":8,"nodeType":"275","messageId":"276","endLine":5,"endColumn":18},{"ruleId":"273","severity":1,"message":"351","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"352","line":10,"column":12,"nodeType":"275","messageId":"276","endLine":10,"endColumn":18},{"ruleId":"273","severity":1,"message":"353","line":10,"column":20,"nodeType":"275","messageId":"276","endLine":10,"endColumn":29},{"ruleId":"273","severity":1,"message":"354","line":15,"column":11,"nodeType":"275","messageId":"276","endLine":15,"endColumn":23},{"ruleId":"321","severity":1,"message":"355","line":35,"column":3,"nodeType":"323","endLine":35,"endColumn":5,"suggestions":"356"},{"ruleId":"277","replacedBy":"357"},{"ruleId":"279","replacedBy":"358"},"@typescript-eslint/no-unused-vars","'TicketProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["359"],"no-negated-in-lhs",["360"],"'getUserName' is defined but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'useEffect' is defined but never used.","'Background' is defined but never used.","'auth' is defined but never used.","'response' is assigned a value but never used.","'classes' is assigned a value but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'useHistory' is defined but never used.","'css' is defined but never used.","'jwt_decode' is defined but never used.","'getUserCredentials' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","'FormHelperText' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getCommentByTicketId' is defined but never used.","'Chip' is defined but never used.","'classes' is defined but never used.","'AutoSizer' is defined but never used.","'NewComment' is defined but never used.","'TicketContext' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'CheckCircleIcon' is defined but never used.","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'statusIsChanged' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'UserRoleContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUserName' and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["361"],"'handleCreateNewTicket' is assigned a value but never used.","'getTicketById' is defined but never used.","'changeTicketStatus' is defined but never used.","'alterInMs' is defined but never used.","React Hook useEffect has missing dependencies: 'setComments' and 'ticketID'. Either include them or remove the dependency array.",["362"],"'Badge' is defined but never used.","'AccountCircle' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Menu' is defined but never used.","'SearchIcon' is defined but never used.","'tickets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array.",["363"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Theme' is defined but never used.","'closedTickets' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Icon' is defined but never used.","'SaveIcon' is defined but never used.","'isNullOrUndefined' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'ticket' is assigned a value but never used.","'setTicket' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUserRole'. Either include it or remove the dependency array.",["364"],["359"],["360"],"no-global-assign","no-unsafe-negation",{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [setTickets, setUserName, userName]",{"range":"373","text":"374"},"Update the dependencies array to be: [setComments, ticketID]",{"range":"375","text":"376"},"Update the dependencies array to be: [setTickets, title]",{"range":"377","text":"378"},"Update the dependencies array to be: [setUserRole]",{"range":"379","text":"380"},[1534,1546],"[setTickets, setUserName, userName]",[610,612],"[setComments, ticketID]",[3909,3916],"[setTickets, title]",[1257,1259],"[setUserRole]"]