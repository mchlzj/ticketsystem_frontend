[{"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx":"1","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx":"3","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx":"4","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx":"5","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx":"6","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx":"7","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx":"8","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx":"9","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx":"10","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js":"11","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts":"12","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx":"13","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx":"14","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx":"15","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx":"16","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx":"17","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx":"18","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx":"19","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx":"20","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx":"21","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx":"22","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx":"23","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx":"24","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx":"25","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx":"26","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx":"27","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx":"28","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx":"29","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx":"30","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx":"31","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx":"32","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx":"33","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx":"34","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx":"35","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx":"36","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\FilterContext.tsx":"37","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Filter\\StatusFilter.tsx":"38","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx":"39","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx":"40"},{"size":1650,"mtime":1621085035554,"results":"41","hashOfConfig":"42"},{"size":438,"mtime":1621080517830,"results":"43","hashOfConfig":"42"},{"size":1875,"mtime":1621085067418,"results":"44","hashOfConfig":"42"},{"size":378,"mtime":1619341753468,"results":"45","hashOfConfig":"42"},{"size":763,"mtime":1619341753473,"results":"46","hashOfConfig":"42"},{"size":368,"mtime":1621080517824,"results":"47","hashOfConfig":"42"},{"size":386,"mtime":1621080517823,"results":"48","hashOfConfig":"42"},{"size":370,"mtime":1621080517817,"results":"49","hashOfConfig":"42"},{"size":469,"mtime":1621095309904,"results":"50","hashOfConfig":"42"},{"size":378,"mtime":1621080517800,"results":"51","hashOfConfig":"42"},{"size":1292,"mtime":1621095420640,"results":"52","hashOfConfig":"42"},{"size":895,"mtime":1621080517830,"results":"53","hashOfConfig":"42"},{"size":666,"mtime":1621080517834,"results":"54","hashOfConfig":"42"},{"size":734,"mtime":1621080517829,"results":"55","hashOfConfig":"42"},{"size":3226,"mtime":1621080657322,"results":"56","hashOfConfig":"42"},{"size":5119,"mtime":1621085184643,"results":"57","hashOfConfig":"42"},{"size":7828,"mtime":1621080517825,"results":"58","hashOfConfig":"42"},{"size":3340,"mtime":1621080517816,"results":"59","hashOfConfig":"42"},{"size":9181,"mtime":1621080517811,"results":"60","hashOfConfig":"42"},{"size":2284,"mtime":1621080517827,"results":"61","hashOfConfig":"42"},{"size":3382,"mtime":1621080587206,"results":"62","hashOfConfig":"42"},{"size":2196,"mtime":1621095363244,"results":"63","hashOfConfig":"42"},{"size":6846,"mtime":1621080517832,"results":"64","hashOfConfig":"42"},{"size":3569,"mtime":1621080517796,"results":"65","hashOfConfig":"42"},{"size":1072,"mtime":1621085326844,"results":"66","hashOfConfig":"42"},{"size":951,"mtime":1621080517801,"results":"67","hashOfConfig":"42"},{"size":1004,"mtime":1621095285086,"results":"68","hashOfConfig":"42"},{"size":1383,"mtime":1621095265157,"results":"69","hashOfConfig":"42"},{"size":377,"mtime":1621005076253,"results":"70","hashOfConfig":"42"},{"size":4795,"mtime":1621080517792,"results":"71","hashOfConfig":"42"},{"size":2542,"mtime":1621085346767,"results":"72","hashOfConfig":"42"},{"size":2134,"mtime":1621085355748,"results":"73","hashOfConfig":"42"},{"size":1062,"mtime":1621080684433,"results":"74","hashOfConfig":"42"},{"size":5771,"mtime":1621095154617,"results":"75","hashOfConfig":"42"},{"size":2030,"mtime":1621080517802,"results":"76","hashOfConfig":"42"},{"size":364,"mtime":1619701568950,"results":"77","hashOfConfig":"42"},{"size":385,"mtime":1621080517833,"results":"78","hashOfConfig":"42"},{"size":1082,"mtime":1621084394119,"results":"79","hashOfConfig":"42"},{"size":1385,"mtime":1621080517793,"results":"80","hashOfConfig":"42"},{"size":3394,"mtime":1621080563330,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ged5a1",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts",[],["170","171"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx",["172"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx",["188","189"],"import {useContext, useEffect} from 'react';\r\nimport {getAllTickets} from './util/ApiCalls';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Ticket from './components/Ticket/Ticket';\r\nimport Navigation from './layouts/Navigation/Navigation';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AllTickets from './pages/AllTickets/AllTickets';\r\nimport NewTicket from './pages/NewTicket/NewTicket';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport MeineTickets from './pages/MeineTickets/MeineTickets';\r\nimport MirZugewieseneTickets from './pages/MirZugewieseneTickets/MirZugewieseneTickets'\r\nimport {TicketsContext} from './pages/AllTickets/TicketsContext';\r\nimport {LoginContext} from './util/LoginContext';\r\nimport auth from './util/auth'\r\nimport {UserNameContext} from './util/UserCredsContext';\r\nimport {ModulesContext} from './pages/NewTicket/ModulesContext';\r\nimport {  getUserCredentials} from './util/UserCreds';\r\nimport {DocumentsContext} from './pages/NewTicket/DocumentsContext';\r\n\r\n// Style definition\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Dashboard(props) {\r\n\r\n  // Necessary consts\r\n  const [tickets,setTickets] = useContext(TicketsContext);\r\n  const [isLoggedIn, setIsLoggedIn] = useContext(LoginContext);\r\n  const [userName,] = useContext(UserNameContext);\r\n  const [moduls,setModules] = useContext(ModulesContext);\r\n  const [documents,setDocuments] = useContext(DocumentsContext);\r\n\r\n  useEffect(() => {\r\n    getAllTickets()\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n    console.log(\"Api Call from App\");\r\n}, []) \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      setIsLoggedIn(true);\r\n    }\r\n    console.log(isLoggedIn);\r\n    console.log(auth.getUserRole());\r\n    console.log(userName);\r\n    console.log(getUserCredentials());\r\n  }, [])\r\n\r\n  const classes = useStyles();\r\n\r\n  // Returning DashBoard\r\n  return (\r\n    <div className= {classes.root}>\r\n      <Router>\r\n        <Navigation history={props.history}/> \r\n        <main className={classes.content}>               \r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route path=\"/newticket\" render={() => <NewTicket moduls={moduls} setModules={setModules} documents={documents} setDocuments={setDocuments}/>}/>\r\n            <Route path=\"/ticketSuchen\" exact render={() => <AllTickets />}/>\r\n            <Route path=\"/ticketSuchen/:id\" component={Ticket}/>\r\n            <Route path=\"/meineTickets\" render={() => <MeineTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n            <Route path=\"/statistics\" render={() => <Statistics tickets={tickets} setTickets={setTickets}/>}/>\r\n            <Route path=\"/MirZugewieseneTickets\" render={() => <MirZugewieseneTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n          </Switch>\r\n        </main>    \r\n      </Router>            \r\n    </div>       \r\n  );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx",["190"],"import {useEffect, useState} from 'react'\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport TicketsZeitverlauf from '../../components/Charts/TicketsZeitverlauf';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TicketsNachModulen from '../../components/Charts/TicketsNachModulen';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n// Style definition\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      },\r\n      root: {\r\n          display: 'flex',\r\n      }\r\n    }),\r\n  );\r\n\r\nfunction Statistics(\r\n  {tickets, setTickets}\r\n  ) {\r\n\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n      setTickets([]);\r\n      setIsLoading(false);\r\n      console.log(\"Api Call from MyTickets\");\r\n    }, [])\r\n\r\n    // Return Statistics component\r\n    return (\r\n        <div>\r\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>\r\n            <Grid item xs={'auto'}>\r\n              <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                  Anzahl erstellter Tickets im Zeitverlauf\r\n              </Typography>\r\n              <TicketsZeitverlauf/>\r\n            </Grid>\r\n            <Grid item xs={12} />\r\n            <Grid item xs={'auto'}>\r\n              <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                  Gesamtzahl erstellter Tickets pro Modul\r\n              </Typography>\r\n              <NewElementButton/>\r\n              <TicketsNachModulen/>\r\n            </Grid>\r\n          </Grid>\r\n          <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx",["191"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport {UserNameContext, } from '../../util/UserCredsContext';\r\nimport {isClosedContext} from '../../util/FilterContext';\r\nimport auth from '../../util/auth';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StatusFilter from '../../components/Filter/StatusFilter';\r\n\r\nexport default function MeineTickets({tickets, setTickets}) {\r\n\r\n\r\n    // Necessary consts\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n    const [isClosed, ] = useContext(isClosedContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n          console.log(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\");\r\n    }, [isClosed])\r\n\r\n    // Style definition\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n    // Filter myTickets\r\n    const myTickets = tickets.filter(ticket =>\r\n      ticket.createdBy.userName === userName && ticket.ticketClosed === isClosed\r\n      );\r\n\r\n    // Return myTickets Component\r\n    return (  \r\n      <div> \r\n      <StatusFilter/>\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Meine Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {isLoading ? null :\r\n          <Grid container \r\n            justify=\"space-around\"\r\n            alignItems=\"flex-start\" \r\n            spacing={4}>\r\n            {myTickets.map(ticket => (\r\n              <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n                <TicketCard\r\n                id={ticket.id}\r\n                title={ticket.title} \r\n                description={ticket.description} \r\n                ticketClosed={ticket.ticketClosed}\r\n                createdBy={ticket.createdBy.userName}\r\n                modul={ticket.document.module.name}\r\n                document={ticket.document.name}/>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        }\r\n        <NewElementButton/>\r\n        <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </div>\r\n    )\r\n}","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx",["192"],"// API Endpoint\r\nconst url = 'https://easyticketapi.azurewebsites.net/api/';\r\n\r\n// Different API Endpoints for testing\r\n//https://www.hetfeld.name/ticket_backend/api/\r\n//http://localhost:59543/api/\r\n//https://easyticketapi.azurewebsites.net/api/\r\n\r\n//Login und Register\r\nexport const login = async(userName, password) => {\r\n    const response = await fetch(url + 'auth/login',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n          userName: userName,\r\n          password: password\r\n              }), \r\n      mode: 'cors',\r\n      headers: {\r\n              'Access-Control-Allow-Origin': 'https://easyticketapi.azurewebsites.net',\r\n              'Content-Type' : 'application/json'\r\n          }\r\n  });\r\n  try {\r\n      console.log(response);\r\n      if (response.ok) {\r\n          const jsonResponse = await response.json();\r\n          return jsonResponse;\r\n      }\r\n      throw new Error(\"Login failed\");\r\n    }catch(error) {\r\n        console.log(\"invalid login\");\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n//Call Tickets\r\nexport const getAllTickets = async() => {\r\n    const response = await fetch(url + 'tickets',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n//Different Functions for searching tickets\r\nexport const getTicketsByTitle = async(title) => {\r\n    if (title !== '' && title !== null) {\r\n        const response = await fetch(url + 'Tickets/SearchByTitle/' + title,\r\n        {\r\n            headers: {\r\n                    'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        }\r\n        );\r\n        try {\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse;\r\n            }\r\n            throw new Error('Request Failed!');\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCommentByTicketId = async(TicketId) => {\r\n    const response = await fetch(url + 'Comments/GetByTicketId/' + TicketId,\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsImZeitverlauf = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketTimeline/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsNachModulen = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketsPerModule/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketById = async(id) => {\r\n    const response = await fetch(url + `Tickets/${id}`, \r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Create a new Comment\r\nexport const newComment = async( ticketID, text) => {\r\n    await fetch(url  + 'Comments',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            ticketID: ticketID,\r\n            text: text            \r\n        }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n    }\r\n\r\n// Create a new Ticket\r\nexport const createNewTicket = async(title, description, documentId) => {\r\n    const response = await fetch(url + 'Tickets',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            documentId: documentId\r\n            }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n}\r\n\r\n// Get all modules\r\nexport const getModules = async() => {\r\n    const response = await fetch(url + 'Modules',\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Get all documents\r\nexport const getDocuments = async( moduleId ) => {\r\n    const response = await fetch(url + `Documents/GetByModuleId/${moduleId}`,\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Change ticket status\r\nexport const changeTicketStatus = async( ticketId ) => {\r\n    const response = await fetch(url + `Tickets/ChangeStatus/${ticketId}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx",["193"],"import {useEffect, useContext} from 'react'\r\nimport {CommentsContext} from './CommentContext';\r\nimport Comment from './Comment';\r\nimport NewComment from './NewComment';\r\nimport {getCommentByTicketId} from '../../util/ApiCalls';\r\n\r\nfunction Comments({ticketID}) {\r\n   \r\n    const [comments, setComments] = useContext(CommentsContext);\r\n\r\n    useEffect(() => {\r\n        getCommentByTicketId(ticketID)\r\n            .then(data => {\r\n                setComments(data);\r\n                console.log(data);\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <NewComment ticketID={ticketID}/>\r\n            {comments.map(comment => (\r\n                <Comment \r\n                key={comment.id} \r\n                commentText={comment.text} \r\n                commentCreator={comment.createdBy.userName}\r\n                commentDate={comment.createdDate}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx",["194"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {MobileOpenContext} from '../Drawer/MobileOpenContext';\r\nimport {AnchorElContext} from './AnchorElContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TicketsContext } from '../../pages/AllTickets/TicketsContext';\r\nimport {getTicketsByTitle, getAllTickets} from '../../util/ApiCalls';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport  {UserMenuId} from './MenuUser';\r\nimport InputBase from '@material-ui/core/InputBase';;\r\n\r\n\r\n// Define styling\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: theme.spacing(2),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n      justifySelf: 'center'\r\n    },\r\n    searchIcon: {\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(2, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 101,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n\r\n  }),\r\n);\r\n\r\n\r\nfunction StyledAppBar() {\r\n\r\n  // Necessary consts\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [, setAnchorEl] = React.useContext(AnchorElContext);\r\n  const [, setTickets] = useContext(TicketsContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  useEffect(() => {\r\n    title === '' ?\r\n    getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n      })\r\n      :\r\n    getTicketsByTitle(title)\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n  }, [title])\r\n\r\n  const goToSearch = () => {\r\n    history.push('/ticketSuchen');\r\n  }\r\n\r\n  // Return AppBar\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Easy-Ticket\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          <div className={classes.search}>\r\n            <InputBase\r\n              placeholder=\"Ticket suchen...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearch}\r\n              onClick={goToSearch}\r\n            />\r\n          </div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={UserMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <img src=\"/media/IconIU.jpg\" alt=\"IU - Logo\" height=\"30\"/>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StyledAppBar;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx",["195"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx",["196"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx",["197"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx",[],["198","199"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\FilterContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Filter\\StatusFilter.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":41,"column":5,"nodeType":"206","endLine":41,"endColumn":7,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"212","line":3,"column":14,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"213","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"214","line":3,"column":29,"nodeType":"210","messageId":"211","endLine":3,"endColumn":33},{"ruleId":"208","severity":1,"message":"215","line":3,"column":34,"nodeType":"210","messageId":"211","endLine":3,"endColumn":45},{"ruleId":"208","severity":1,"message":"216","line":3,"column":46,"nodeType":"210","messageId":"211","endLine":3,"endColumn":50},{"ruleId":"208","severity":1,"message":"217","line":3,"column":51,"nodeType":"210","messageId":"211","endLine":3,"endColumn":54},{"ruleId":"208","severity":1,"message":"218","line":3,"column":55,"nodeType":"210","messageId":"211","endLine":3,"endColumn":61},{"ruleId":"208","severity":1,"message":"219","line":3,"column":62,"nodeType":"210","messageId":"211","endLine":3,"endColumn":66},{"ruleId":"208","severity":1,"message":"220","line":3,"column":79,"nodeType":"210","messageId":"211","endLine":3,"endColumn":83},{"ruleId":"208","severity":1,"message":"221","line":3,"column":84,"nodeType":"210","messageId":"211","endLine":3,"endColumn":86},{"ruleId":"208","severity":1,"message":"222","line":3,"column":87,"nodeType":"210","messageId":"211","endLine":3,"endColumn":93},{"ruleId":"208","severity":1,"message":"223","line":3,"column":94,"nodeType":"210","messageId":"211","endLine":3,"endColumn":96},{"ruleId":"208","severity":1,"message":"224","line":3,"column":97,"nodeType":"210","messageId":"211","endLine":3,"endColumn":113},{"ruleId":"208","severity":1,"message":"225","line":3,"column":114,"nodeType":"210","messageId":"211","endLine":3,"endColumn":120},{"ruleId":"204","severity":1,"message":"226","line":50,"column":4,"nodeType":"206","endLine":50,"endColumn":6,"suggestions":"227"},{"ruleId":"204","severity":1,"message":"228","line":60,"column":6,"nodeType":"206","endLine":60,"endColumn":8,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"230","line":43,"column":6,"nodeType":"206","endLine":43,"endColumn":8,"suggestions":"231"},{"ruleId":"204","severity":1,"message":"232","line":34,"column":8,"nodeType":"206","endLine":34,"endColumn":18,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":170,"column":11,"nodeType":"236","messageId":"211","endLine":170,"endColumn":19},{"ruleId":"204","severity":1,"message":"237","line":17,"column":7,"nodeType":"206","endLine":17,"endColumn":9,"suggestions":"238"},{"ruleId":"204","severity":1,"message":"226","line":115,"column":6,"nodeType":"206","endLine":115,"endColumn":13,"suggestions":"239"},{"ruleId":"204","severity":1,"message":"240","line":18,"column":15,"nodeType":"241","endLine":37,"endColumn":6},{"ruleId":"204","severity":1,"message":"240","line":18,"column":15,"nodeType":"241","endLine":37,"endColumn":6},{"ruleId":"204","severity":1,"message":"242","line":41,"column":3,"nodeType":"206","endLine":41,"endColumn":5,"suggestions":"243"},{"ruleId":"200","replacedBy":"244"},{"ruleId":"202","replacedBy":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["248"],"no-unused-vars","'class' is defined but never used.","Program","unusedVar","'for' is defined but never used.","'retrieving' is defined but never used.","'user' is defined but never used.","'information' is defined but never used.","'from' is defined but never used.","'jwt' is defined but never used.","'token.' is defined but never used.","'User' is defined but never used.","'will' is defined but never used.","'be' is defined but never used.","'stored' is defined but never used.","'in' is defined but never used.","'UserCredsContext' is defined but never used.","'anyway' is defined but never used.","React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has missing dependencies: 'isLoggedIn', 'setIsLoggedIn', and 'userName'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array. If 'setTickets' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["251"],"React Hook useEffect has missing dependencies: 'setTickets', 'setUserName', and 'userName'. Either include them or remove the dependency array. If 'setTickets' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["252"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","React Hook useEffect has missing dependencies: 'setComments' and 'ticketID'. Either include them or remove the dependency array.",["253"],["254"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setUserRole'. Either include it or remove the dependency array.",["255"],["246"],["247"],"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"258","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [setIsLoggedIn]",{"range":"271","text":"272"},"Update the dependencies array to be: [setTickets]",{"range":"273","text":"274"},"Update the dependencies array to be: [isLoggedIn, setIsLoggedIn, userName]",{"range":"275","text":"276"},{"range":"277","text":"274"},"Update the dependencies array to be: [isClosed, setTickets, setUserName, userName]",{"range":"278","text":"279"},"Update the dependencies array to be: [setComments, ticketID]",{"range":"280","text":"281"},"Update the dependencies array to be: [setTickets, title]",{"range":"282","text":"283"},"Update the dependencies array to be: [setUserRole]",{"range":"284","text":"285"},[1197,1199],"[setIsLoggedIn]",[1881,1883],"[setTickets]",[2129,2131],"[isLoggedIn, setIsLoggedIn, userName]",[1233,1235],[1425,1435],"[isClosed, setTickets, setUserName, userName]",[524,526],"[setComments, ticketID]",[3230,3237],"[setTickets, title]",[1702,1704],"[setUserRole]"]