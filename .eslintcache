[{"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx":"1","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx":"3","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx":"4","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx":"5","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx":"6","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx":"7","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx":"8","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx":"9","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx":"10","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js":"11","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts":"12","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx":"13","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx":"14","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx":"15","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx":"16","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx":"17","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx":"18","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx":"19","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx":"20","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx":"21","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx":"22","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx":"23","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx":"24","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx":"25","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx":"26","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx":"27","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx":"28","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx":"29","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx":"30","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx":"31","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx":"32","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx":"33","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx":"34","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx":"35","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx":"36","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\FilterContext.tsx":"37","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Filter\\StatusFilter.tsx":"38","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx":"39","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx":"40"},{"size":1890,"mtime":1621080517812,"results":"41","hashOfConfig":"42"},{"size":438,"mtime":1621080517830,"results":"43","hashOfConfig":"42"},{"size":2051,"mtime":1621080517790,"results":"44","hashOfConfig":"42"},{"size":378,"mtime":1619341753468,"results":"45","hashOfConfig":"42"},{"size":763,"mtime":1619341753473,"results":"46","hashOfConfig":"42"},{"size":368,"mtime":1621080517824,"results":"47","hashOfConfig":"42"},{"size":386,"mtime":1621080517823,"results":"48","hashOfConfig":"42"},{"size":370,"mtime":1621080517817,"results":"49","hashOfConfig":"42"},{"size":519,"mtime":1621080517808,"results":"50","hashOfConfig":"42"},{"size":378,"mtime":1621080517800,"results":"51","hashOfConfig":"42"},{"size":1329,"mtime":1621080517835,"results":"52","hashOfConfig":"42"},{"size":895,"mtime":1621080517830,"results":"53","hashOfConfig":"42"},{"size":666,"mtime":1621080517834,"results":"54","hashOfConfig":"42"},{"size":734,"mtime":1621080517829,"results":"55","hashOfConfig":"42"},{"size":3226,"mtime":1621080657322,"results":"56","hashOfConfig":"42"},{"size":5379,"mtime":1621080517820,"results":"57","hashOfConfig":"42"},{"size":7828,"mtime":1621080517825,"results":"58","hashOfConfig":"42"},{"size":3340,"mtime":1621080517816,"results":"59","hashOfConfig":"42"},{"size":9181,"mtime":1621080517811,"results":"60","hashOfConfig":"42"},{"size":2284,"mtime":1621080517827,"results":"61","hashOfConfig":"42"},{"size":3382,"mtime":1621080587206,"results":"62","hashOfConfig":"42"},{"size":2261,"mtime":1621080517813,"results":"63","hashOfConfig":"42"},{"size":6846,"mtime":1621080517832,"results":"64","hashOfConfig":"42"},{"size":3569,"mtime":1621080517796,"results":"65","hashOfConfig":"42"},{"size":1143,"mtime":1621080517795,"results":"66","hashOfConfig":"42"},{"size":951,"mtime":1621080517801,"results":"67","hashOfConfig":"42"},{"size":1015,"mtime":1621080517807,"results":"68","hashOfConfig":"42"},{"size":1402,"mtime":1621080517805,"results":"69","hashOfConfig":"42"},{"size":377,"mtime":1621005076253,"results":"70","hashOfConfig":"42"},{"size":4795,"mtime":1621080517792,"results":"71","hashOfConfig":"42"},{"size":2549,"mtime":1621080517797,"results":"72","hashOfConfig":"42"},{"size":2141,"mtime":1621080517798,"results":"73","hashOfConfig":"42"},{"size":1062,"mtime":1621080684433,"results":"74","hashOfConfig":"42"},{"size":5787,"mtime":1621080517804,"results":"75","hashOfConfig":"42"},{"size":2030,"mtime":1621080517802,"results":"76","hashOfConfig":"42"},{"size":364,"mtime":1619701568950,"results":"77","hashOfConfig":"42"},{"size":385,"mtime":1621080517833,"results":"78","hashOfConfig":"42"},{"size":1082,"mtime":1621080517809,"results":"79","hashOfConfig":"42"},{"size":1385,"mtime":1621080517793,"results":"80","hashOfConfig":"42"},{"size":3394,"mtime":1621080563330,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ged5a1",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts",[],["172","173"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js",[],["174","175"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx",["176","177"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx",["178"],"import {useEffect, useState} from 'react'\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport TicketsZeitverlauf from '../../components/Charts/TicketsZeitverlauf';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TicketsNachModulen from '../../components/Charts/TicketsNachModulen';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n// Style definition\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      },\r\n      root: {\r\n          display: 'flex',\r\n      }\r\n    }),\r\n  );\r\n\r\nfunction Statistics(\r\n  {tickets, setTickets}\r\n  ) {\r\n\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n      setTickets([]);\r\n      setIsLoading(false);\r\n      console.log(\"Api Call from MyTickets\");\r\n    }, [])\r\n\r\n    // Return Statistics component\r\n    return (\r\n        <div>\r\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>\r\n            <Grid item xs={'auto'}>\r\n              <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                  Anzahl erstellter Tickets im Zeitverlauf\r\n              </Typography>\r\n              <TicketsZeitverlauf/>\r\n            </Grid>\r\n            <Grid item xs={12} />\r\n            <Grid item xs={'auto'}>\r\n              <Typography align='center' gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                  Gesamtzahl erstellter Tickets pro Modul\r\n              </Typography>\r\n              <NewElementButton/>\r\n              <TicketsNachModulen/>\r\n            </Grid>\r\n          </Grid>\r\n          <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx",["179"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport {UserNameContext, } from '../../util/UserCredsContext';\r\nimport {isClosedContext} from '../../util/FilterContext';\r\nimport auth from '../../util/auth';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StatusFilter from '../../components/Filter/StatusFilter';\r\n\r\nexport default function MeineTickets({tickets, setTickets}) {\r\n\r\n\r\n    // Necessary consts\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n    const [isClosed, ] = useContext(isClosedContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n          console.log(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\");\r\n    }, [isClosed])\r\n\r\n    // Style definition\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n    // Filter myTickets\r\n    const myTickets = tickets.filter(ticket =>\r\n      ticket.createdBy.userName === userName && ticket.ticketClosed === isClosed\r\n      );\r\n\r\n    // Return myTickets Component\r\n    return (  \r\n      <div> \r\n      <StatusFilter/>\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Meine Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {isLoading ? null :\r\n          <Grid container \r\n            justify=\"space-around\"\r\n            alignItems=\"flex-start\" \r\n            spacing={4}>\r\n            {myTickets.map(ticket => (\r\n              <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n                <TicketCard\r\n                id={ticket.id}\r\n                title={ticket.title} \r\n                description={ticket.description} \r\n                ticketClosed={ticket.ticketClosed}\r\n                createdBy={ticket.createdBy.userName}\r\n                modul={ticket.document.module.name}\r\n                document={ticket.document.name}/>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        }\r\n        <NewElementButton/>\r\n        <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </div>\r\n    )\r\n}","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx",["180"],"// API Endpoint\r\nconst url = 'https://easyticketapi.azurewebsites.net/api/';\r\n\r\n// Different API Endpoints for testing\r\n//https://www.hetfeld.name/ticket_backend/api/\r\n//http://localhost:59543/api/\r\n//https://easyticketapi.azurewebsites.net/api/\r\n\r\n//Login und Register\r\nexport const login = async(userName, password) => {\r\n    const response = await fetch(url + 'auth/login',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n          userName: userName,\r\n          password: password\r\n              }), \r\n      mode: 'cors',\r\n      headers: {\r\n              'Access-Control-Allow-Origin': 'https://easyticketapi.azurewebsites.net',\r\n              'Content-Type' : 'application/json'\r\n          }\r\n  });\r\n  try {\r\n      console.log(response);\r\n      if (response.ok) {\r\n          const jsonResponse = await response.json();\r\n          return jsonResponse;\r\n      }\r\n      throw new Error(\"Login failed\");\r\n    }catch(error) {\r\n        console.log(\"invalid login\");\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n//Call Tickets\r\nexport const getAllTickets = async() => {\r\n    const response = await fetch(url + 'tickets',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n//Different Functions for searching tickets\r\nexport const getTicketsByTitle = async(title) => {\r\n    if (title !== '' && title !== null) {\r\n        const response = await fetch(url + 'Tickets/SearchByTitle/' + title,\r\n        {\r\n            headers: {\r\n                    'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        }\r\n        );\r\n        try {\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse;\r\n            }\r\n            throw new Error('Request Failed!');\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCommentByTicketId = async(TicketId) => {\r\n    const response = await fetch(url + 'Comments/GetByTicketId/' + TicketId,\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsImZeitverlauf = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketTimeline/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsNachModulen = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketsPerModule/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketById = async(id) => {\r\n    const response = await fetch(url + `Tickets/${id}`, \r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Create a new Comment\r\nexport const newComment = async( ticketID, text) => {\r\n    await fetch(url  + 'Comments',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            ticketID: ticketID,\r\n            text: text            \r\n        }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n    }\r\n\r\n// Create a new Ticket\r\nexport const createNewTicket = async(title, description, documentId) => {\r\n    const response = await fetch(url + 'Tickets',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            documentId: documentId\r\n            }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n}\r\n\r\n// Get all modules\r\nexport const getModules = async() => {\r\n    const response = await fetch(url + 'Modules',\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Get all documents\r\nexport const getDocuments = async( moduleId ) => {\r\n    const response = await fetch(url + `Documents/GetByModuleId/${moduleId}`,\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n// Change ticket status\r\nexport const changeTicketStatus = async( ticketId ) => {\r\n    const response = await fetch(url + `Tickets/ChangeStatus/${ticketId}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx",["181"],"import {useEffect, useContext} from 'react'\r\nimport {CommentsContext} from './CommentContext';\r\nimport Comment from './Comment';\r\nimport NewComment from './NewComment';\r\nimport {getCommentByTicketId} from '../../util/ApiCalls';\r\n\r\nfunction Comments({ticketID}) {\r\n   \r\n    const [comments, setComments] = useContext(CommentsContext);\r\n\r\n    useEffect(() => {\r\n        getCommentByTicketId(ticketID)\r\n            .then(data => {\r\n                setComments(data);\r\n                console.log(data);\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <NewComment ticketID={ticketID}/>\r\n            {comments.map(comment => (\r\n                <Comment \r\n                key={comment.id} \r\n                commentText={comment.text} \r\n                commentCreator={comment.createdBy.userName}\r\n                commentDate={comment.createdDate}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx",["182"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {MobileOpenContext} from '../Drawer/MobileOpenContext';\r\nimport {AnchorElContext} from './AnchorElContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TicketsContext } from '../../pages/AllTickets/TicketsContext';\r\nimport {getTicketsByTitle, getAllTickets} from '../../util/ApiCalls';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport  {UserMenuId} from './MenuUser';\r\nimport InputBase from '@material-ui/core/InputBase';;\r\n\r\n\r\n// Define styling\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: theme.spacing(2),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n      justifySelf: 'center'\r\n    },\r\n    searchIcon: {\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(2, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 101,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n\r\n  }),\r\n);\r\n\r\n\r\nfunction StyledAppBar() {\r\n\r\n  // Necessary consts\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [, setAnchorEl] = React.useContext(AnchorElContext);\r\n  const [, setTickets] = useContext(TicketsContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  useEffect(() => {\r\n    title === '' ?\r\n    getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n      })\r\n      :\r\n    getTicketsByTitle(title)\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n  }, [title])\r\n\r\n  const goToSearch = () => {\r\n    history.push('/ticketSuchen');\r\n  }\r\n\r\n  // Return AppBar\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Easy-Ticket\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          <div className={classes.search}>\r\n            <InputBase\r\n              placeholder=\"Ticket suchen...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearch}\r\n              onClick={goToSearch}\r\n            />\r\n          </div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={UserMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <img src=\"/media/IconIU.jpg\" alt=\"IU - Logo\" height=\"30\"/>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StyledAppBar;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx",["183"],"import  {useState, useEffect} from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {getTicketsNachModulen} from '../../util/ApiCalls';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n/*\r\n  .jsx Komponente, da Charts-js Probleme mit Typscript hat\r\n*/\r\n  function TicketsNachModulen() {\r\n\r\n    // Necessary consts\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsNachModulen();\r\n      console.log(result);\r\n      result.forEach(element => {\r\n        labels.push(element.modulName.split(' - ')[0]);\r\n        openTickets.push(element.openTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    // Diagram data\r\n    const dataOpen = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: openTickets,\r\n          backgroundColor: 'rgba(234, 91, 15, 1)',\r\n          borderColor: 'rgba(234, 91, 15, 1)',\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    const dataClosed = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            data: closedTickets,\r\n            backgroundColor: 'rgba(17, 52, 64, 1)',\r\n            borderColor: 'rgba(17, 52, 64, 1)',\r\n            fill: false,\r\n          },\r\n        ],\r\n      };\r\n    \r\n    // Display options of the diagram\r\n    const options = {\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>\r\n      <Grid item xs={'auto'}>\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n                offene Tickets\r\n    </Typography>\r\n      <Bar data={dataOpen} options={options}/>\r\n      </Grid>\r\n      <Grid item xs={'auto'}>\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            geschlossene Tickets\r\n    </Typography>\r\n      <Bar data={dataClosed} options={options}/>\r\n      </Grid>\r\n      </Grid>\r\n      </div>\r\n    );\r\n  } \r\n    \r\nexport default TicketsNachModulen","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx",["184"],"\r\nimport {useState, useEffect} from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport {getTicketsImZeitverlauf} from '../../util/ApiCalls';\r\n\r\n  /*\r\n  .jsx Komponente, da Charts-js Probleme mit Typscript hat\r\n  */\r\n  function TicketsZeitverlauf() {\r\n\r\n    // Necessary consts\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsImZeitverlauf();\r\n\r\n      result.forEach(element => {\r\n        labels.push(element.month);\r\n        openTickets.push(element.openedTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    // Diagram data\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'geöffnete Tickets',\r\n          data: openTickets,\r\n          backgroundColor: 'rgba(234, 91, 15, 1)',\r\n          borderColor: 'rgba(234, 91, 15, 1)',\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'geschlossene Tickets',\r\n          data: closedTickets,\r\n          backgroundColor: 'rgba(17, 52, 64, 1)',\r\n          borderColor: 'rgba(17, 52, 64, 1)',\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    \r\n    // Display options of the diagram\r\n    const options = {\r\n      pugins: {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Anzahl der erstellten Tickets im Zeitverlauf'\r\n        },\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n\r\n    return (\r\n      <div >\r\n      <Line data={data} options={options} />\r\n      </div>\r\n    );\r\n  } \r\n    \r\nexport default TicketsZeitverlauf","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx",["185"],"import  {useContext, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {MobileOpenContext} from './MobileOpenContext';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {Button, withStyles} from '@material-ui/core';\r\nimport {UserRoleContext} from '../../util/UserCredsContext';\r\nimport auth from '../../util/auth'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\n\r\nfunction DrawerContent(props) {\r\n\r\n// Style definition\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    toolbar: theme.mixins.toolbar,\r\n    link: {\r\n      textDecoration: 'none'\r\n    }\r\n  }),\r\n);\r\n\r\n// Consts for setting and getting the saved context variables\r\nconst [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\nconst [userRole, setUserRole] = useContext(UserRoleContext);\r\n\r\n// Setting the current user role\r\nuseEffect(() => {\r\n  setUserRole(auth.getUserRole());\r\n},[])\r\n\r\nconst classes = useStyles();\r\n\r\nconst handleDrawerToggle = () => {\r\n  if (mobileOpen === true) {\r\n    setMobileOpen(!mobileOpen);\r\n  }\r\n  console.log(window.location.href);\r\n};\r\n\r\n// Logout function\r\nconst handleLogout = () => {\r\n  localStorage.removeItem('token');\r\n  props.history.push('/login');\r\n  setUserRole(auth.getUserRole());\r\n};\r\n\r\n// Styling of different used items\r\nconst StyledListItemText = withStyles({\r\n  root: {\r\n    color: \"white\",\r\n  },\r\n})(ListItemText);\r\n\r\nconst StyledListItemIcon = withStyles({\r\n  root: {\r\n    color: \"white\",\r\n  },\r\n})(ListItemIcon);\r\n\r\nconst StyledListItem = withStyles({\r\n  root: {\r\n    color: \"#EA5B0F\",\r\n    '&$selected': { \r\n      backgroundColor: \"#EA5B0F\", \r\n    }, \r\n  },\r\n})(ListItem);\r\n\r\n// Returning the drawer content\r\n  return (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List>\r\n            <Link className={classes.link} to=\"/newticket\" onClick={handleDrawerToggle}>\r\n            <StyledListItem button key='NeuesTicket'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/newticket\" ? {color: \"#EA5B0F\"} : {}}><CreateIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Neues Ticket' style={window.location.href===\"http://localhost:3000/newticket\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n            <Link className={classes.link} to=\"/ticketSuchen\" onClick={handleDrawerToggle}>\r\n              <StyledListItem button key='ticketSuchen'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/ticketSuchen\" ? {color: \"#EA5B0F\"} : {}}><AllInboxIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Alle Tickets' style={window.location.href===\"http://localhost:3000/ticketSuchen\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <Link className={classes.link} to=\"/statistics\" onClick={handleDrawerToggle}>\r\n           <StyledListItem button key='Statistiken'>\r\n                <StyledListItemIcon style={window.location.href===\"http://localhost:3000/statistics\" ? {color: \"#EA5B0F\"} : {}}><BarChartIcon /></StyledListItemIcon>\r\n                <StyledListItemText primary='Statistiken' style={window.location.href===\"http://localhost:3000/statistics\" ? {color: \"#EA5B0F\"} : {}}/>\r\n              </StyledListItem>\r\n            </Link>\r\n            \r\n              <Link className={classes.link} to=\"/meineTickets\" onClick={handleDrawerToggle}>\r\n              <StyledListItem button key='meineTickets'>\r\n                   <StyledListItemIcon style={window.location.href===\"http://localhost:3000/meineTickets\" ? {color: \"#EA5B0F\"} : {}}><InboxIcon /></StyledListItemIcon>\r\n                   <StyledListItemText primary='Meine Tickets' style={window.location.href===\"http://localhost:3000/meineTickets\" ? {color: \"#EA5B0F\"} : {}} />\r\n                 </StyledListItem>\r\n               </Link>\r\n               {userRole === 'Tutor' ?\r\n            <Link className={classes.link} to=\"/MirZugewieseneTickets\" onClick={handleDrawerToggle}>\r\n            <StyledListItem button key='MirZugewieseneTickets'>\r\n                 <StyledListItemIcon style={window.location.href===\"http://localhost:3000/MirZugewieseneTickets\" ? {color: \"#EA5B0F\"} : {}}><AssignmentIndIcon /></StyledListItemIcon>\r\n                 <StyledListItemText primary='Mir zugewiesene Tickets' style={window.location.href===\"http://localhost:3000/MirZugewieseneTickets\" ? {color: \"#EA5B0F\"} : {}}/>\r\n               </StyledListItem>\r\n             </Link>\r\n             :\r\n             null\r\n          }\r\n            <StyledListItem button key='meineTickets' onClick={handleLogout}>\r\n            <StyledListItemIcon ><MeetingRoomIcon /></StyledListItemIcon>\r\n            <StyledListItemText primary='Logout'  />\r\n          </StyledListItem>\r\n\r\n          </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawerContent\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\FilterContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Filter\\StatusFilter.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":50,"column":4,"nodeType":"192","endLine":50,"endColumn":6,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":60,"column":6,"nodeType":"192","endLine":60,"endColumn":8,"suggestions":"195"},{"ruleId":"190","severity":1,"message":"196","line":43,"column":6,"nodeType":"192","endLine":43,"endColumn":8,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"198","line":34,"column":8,"nodeType":"192","endLine":34,"endColumn":18,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":170,"column":11,"nodeType":"202","messageId":"203","endLine":170,"endColumn":19},{"ruleId":"190","severity":1,"message":"204","line":17,"column":7,"nodeType":"192","endLine":17,"endColumn":9,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"191","line":115,"column":6,"nodeType":"192","endLine":115,"endColumn":13,"suggestions":"206"},{"ruleId":"190","severity":1,"message":"207","line":16,"column":15,"nodeType":"208","endLine":35,"endColumn":6},{"ruleId":"190","severity":1,"message":"207","line":15,"column":15,"nodeType":"208","endLine":33,"endColumn":6},{"ruleId":"190","severity":1,"message":"209","line":41,"column":3,"nodeType":"192","endLine":41,"endColumn":5,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has missing dependencies: 'isLoggedIn', 'setIsLoggedIn', and 'userName'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array. If 'setTickets' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],"React Hook useEffect has missing dependencies: 'setTickets', 'setUserName', and 'userName'. Either include them or remove the dependency array. If 'setTickets' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setComments' and 'ticketID'. Either include them or remove the dependency array.",["217"],["218"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setUserRole'. Either include it or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"220","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [setTickets]",{"range":"233","text":"234"},"Update the dependencies array to be: [isLoggedIn, setIsLoggedIn, userName]",{"range":"235","text":"236"},{"range":"237","text":"234"},"Update the dependencies array to be: [isClosed, setTickets, setUserName, userName]",{"range":"238","text":"239"},"Update the dependencies array to be: [setComments, ticketID]",{"range":"240","text":"241"},"Update the dependencies array to be: [setTickets, title]",{"range":"242","text":"243"},"Update the dependencies array to be: [setUserRole]",{"range":"244","text":"245"},[1881,1883],"[setTickets]",[2129,2131],"[isLoggedIn, setIsLoggedIn, userName]",[1233,1235],[1425,1435],"[isClosed, setTickets, setUserName, userName]",[524,526],"[setComments, ticketID]",[3230,3237],"[setTickets, title]",[1717,1719],"[setUserRole]"]