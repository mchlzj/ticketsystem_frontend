[{"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\index.tsx":"1","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\App.tsx":"3","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\LoginContext.tsx":"4","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx":"5","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx":"6","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx":"7","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\auth.js":"8","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\style-theme.ts":"9","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\UserCreds.tsx":"10","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\DashBoard.tsx":"11","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\protectedRoute.tsx":"12","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx":"13","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx":"14","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx":"15","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx":"16","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx":"17","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx":"18","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx":"19","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx":"20","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx":"21","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\SearchBar\\TicketSearchBar.tsx":"22","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx":"23","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\ApiCalls.tsx":"24","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx":"25","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx":"26","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx":"27","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx":"28","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\mui-style-theme.ts":"29","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx":"30","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx":"31","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx":"32"},{"size":1125,"mtime":1619695837162,"results":"33","hashOfConfig":"34"},{"size":440,"mtime":1619459191078,"results":"35","hashOfConfig":"34"},{"size":1898,"mtime":1619695837156,"results":"36","hashOfConfig":"34"},{"size":378,"mtime":1619459191081,"results":"37","hashOfConfig":"34"},{"size":763,"mtime":1619695837179,"results":"38","hashOfConfig":"34"},{"size":372,"mtime":1619459191069,"results":"39","hashOfConfig":"34"},{"size":401,"mtime":1619459191059,"results":"40","hashOfConfig":"34"},{"size":1958,"mtime":1619695837180,"results":"41","hashOfConfig":"34"},{"size":1198,"mtime":1619459191079,"results":"42","hashOfConfig":"34"},{"size":762,"mtime":1619459191082,"results":"43","hashOfConfig":"34"},{"size":3282,"mtime":1619696023426,"results":"44","hashOfConfig":"34"},{"size":738,"mtime":1619695837178,"results":"45","hashOfConfig":"34"},{"size":2022,"mtime":1619695837172,"results":"46","hashOfConfig":"34"},{"size":3074,"mtime":1619696889132,"results":"47","hashOfConfig":"34"},{"size":3283,"mtime":1619696259519,"results":"48","hashOfConfig":"34"},{"size":2092,"mtime":1619459191063,"results":"49","hashOfConfig":"34"},{"size":6663,"mtime":1619696618608,"results":"50","hashOfConfig":"34"},{"size":3612,"mtime":1619696352491,"results":"51","hashOfConfig":"34"},{"size":163,"mtime":1619459191076,"results":"52","hashOfConfig":"34"},{"size":3664,"mtime":1619696484580,"results":"53","hashOfConfig":"34"},{"size":2063,"mtime":1619695837165,"results":"54","hashOfConfig":"34"},{"size":1651,"mtime":1619459191062,"results":"55","hashOfConfig":"34"},{"size":3105,"mtime":1619696146847,"results":"56","hashOfConfig":"34"},{"size":504,"mtime":1619613883825,"results":"57","hashOfConfig":"34"},{"size":997,"mtime":1619459191059,"results":"58","hashOfConfig":"34"},{"size":1359,"mtime":1619459191058,"results":"59","hashOfConfig":"34"},{"size":3571,"mtime":1619459191054,"results":"60","hashOfConfig":"34"},{"size":377,"mtime":1619459191054,"results":"61","hashOfConfig":"34"},{"size":1016,"mtime":1619459191066,"results":"62","hashOfConfig":"34"},{"size":4995,"mtime":1619695849944,"results":"63","hashOfConfig":"34"},{"size":1536,"mtime":1619459191055,"results":"64","hashOfConfig":"34"},{"size":370,"mtime":1619695849887,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"e9k01w",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\index.tsx",[],["140","141"],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\App.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\LoginContext.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\auth.js",[],["142","143"],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\style-theme.ts",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\UserCreds.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\DashBoard.tsx",["144","145","146"],"import {useContext, useEffect} from 'react';\r\nimport {getAllTickets} from './util/ApiCalls';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Ticket from './components/Ticket/Ticket';\r\nimport Navigation from './layouts/Navigation/Navigation';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AllTickets from './pages/AllTickets/AllTickets';\r\nimport NewTicket from './pages/NewTicket/NewTicket';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport MeineTickets from './pages/MeineTickets/MeineTickets';\r\nimport MirZugewieseneTickets from './pages/MirZugewieseneTickets/MirZugewieseneTickets';\r\nimport {TicketsContext} from './pages/AllTickets/TicketsContext';\r\nimport {LoginContext} from './util/LoginContext';\r\nimport auth from './util/auth'\r\nimport {UserNameContext, UserRoleContext} from './util/UserCredsContext';\r\nimport {ModulesContext} from './pages/NewTicket/ModulesContext';\r\nimport {getUserName,  getUserCredentials} from './util/UserCreds';\r\n\r\n\r\n// import ApiPreCalls from './ApiCalls/ApiPreCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const [tickets,setTickets] = useContext(TicketsContext);\r\n  const [isLoggedIn, setIsLoggedIn] = useContext(LoginContext);\r\n  const [userName,] = useContext(UserNameContext);\r\n  const [userRole, setUserRole] = useContext(UserRoleContext);\r\n  const [moduls,setModules] = useContext(ModulesContext);\r\n\r\n\r\n  useEffect(() => {\r\n    getAllTickets()\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n    console.log(\"Api Call from App\");\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, []) \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      setIsLoggedIn(true);\r\n    }\r\n    console.log(isLoggedIn);\r\n    console.log(auth.getUserRole());\r\n    console.log(userName);\r\n    console.log(getUserCredentials());\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n  return (\r\n\r\n    <div className= {classes.root}>\r\n        <Router>\r\n          <Navigation history={props.history}/> \r\n          <main className={classes.content}>               \r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n              <Route path=\"/newticket\" render={() => <NewTicket moduls={moduls} setModules={setModules}/>}/>\r\n              <Route path=\"/ticketSuchen\" exact render={() => <AllTickets tickets={tickets} setTickets={setTickets} />}/>\r\n              <Route path=\"/ticketSuchen/:id\" component={Ticket}/>\r\n              <Route path=\"/statistics\" component={Statistics}/>\r\n              <Route path=\"/meineTickets\" render={() => <MeineTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n              <Route path=\"/MirZugewieseneTickets\" render={() => <MirZugewieseneTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n          </Switch>\r\n          </main>    \r\n        </Router>            \r\n      </div>       \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\protectedRoute.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx",["147"],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx",["148","149","150"],"import  {useEffect, useState} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport TicketSearchBar from '../../components/SearchBar/TicketSearchBar';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {getUserName, getUserCredentials} from '../../util/UserCreds';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function AllTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        console.log(\"Api Call from AllTickets\");\r\n        console.log(getUserName());\r\n        \r\n \r\n    }, [setTickets])\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n    // const columns: ColDef[] = [\r\n    //     { field: 'id', headerName: 'ID', width: 70 },\r\n    //     { field: 'title', headerName: 'Titel', width: 260 },\r\n    //     { field: 'description', headerName: 'Beschreibung', width: 390 },\r\n    //     { field: 'lastChangedDate', headerName: 'Änderungsdatum', width: 260 },\r\n    //   ];\r\n      \r\n\r\n    return (  \r\n      <div> \r\n      {/*<TicketSearchBar/>*/}\r\n\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Tickets suchen\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? <h1>Loading...</h1> :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {tickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard \r\n      id={ticket.id}\r\n      title={ticket.title} \r\n        description={ticket.description} \r\n        ticketClosed={ticket.ticketClosed}\r\n        createdBy={ticket.createdBy.userName}\r\n        modul={ticket.document.module.name}/>\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n}\r\n    <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" className={classes.fab} onClick={handleCreateNewTicket}>\r\n      <AddIcon />\r\n      &nbsp; Neues Ticket\r\n    </Fab>\r\n\r\n    </div>\r\n\r\n    // <div style={{ height: 400, width: '100%' }}>\r\n    //   <DataGrid rows={tickets} columns={columns} pageSize={5} />\r\n    // </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx",["151","152","153","154","155"],"import {useState, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {sendData} from './ApiCalls';\r\nimport auth from '../../util/auth'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Box from '@material-ui/core/Box'\r\nimport {getModules} from '../../util/ApiCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    title: {\r\n        width: '50ch'\r\n    },\r\n    description: {\r\n        width: '150ch',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n      textTransform: 'none'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function NewTicket({moduls, setModules}) {\r\n    const classes = useStyles();\r\n\r\n    const [titleValue, setTitleValue] = useState('');\r\n    const [descriptionValue, setDescriptionValue] = useState('');\r\n    const [modul, setModuleValue] = useState('');\r\n    const [document, setDocumentValue] = useState('');\r\n\r\n\r\n    /*var moduleArray;\r\n    const promiseAllModules = getModules();\r\n \r\n    promiseAllModules.then(function(result) {\r\n      moduleArray = result\r\n      console.log(moduleArray);\r\n    });*/\r\n\r\n    useEffect(() => {\r\n      getModules()\r\n      .then(data => {\r\n        /*setModules(data);*/\r\n      })\r\n      .then(() => console.log(moduls)); \r\n    }, [setModules])\r\n\r\n    /*useEffect(() => {\r\n      console.log(auth.getUserRole());\r\n    })*/\r\n\r\n    const handleModuleChange = ({target}) => {\r\n      setModuleValue(target.value);\r\n    };\r\n\r\n    const handleDocumentChange = ({target}) => {\r\n      setDocumentValue(target.value);\r\n    };\r\n\r\n    const handleChangeDescription = ({target}) => {\r\n        setDescriptionValue(target.value);\r\n    };\r\n    const handleChangeTitle = ({target}) => {\r\n        setTitleValue(target.value);\r\n    };\r\n    const submitTicket = () => {\r\n        /*console.log(\"i got clicked\")\r\n        sendData( titleValue , descriptionValue)\r\n          .then(success => {\r\n            alert('Neues Ticket erfolgreich erstellt!');\r\n            console.log(success);\r\n          });*/\r\n    };\r\n\r\n    \r\n    return (\r\n      <div>\r\n\r\n        <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <CreateIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Neues Ticket erstellen\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n          <Grid item xs={\"auto\"}>\r\n            <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black'}}>\r\n              <CardContent>\r\n                <Grid container justify=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Titel\r\n                    </Box>\r\n                    </Typography>\r\n                    <TextField id=\"title_textfield\" fullWidth={true} label=\"Titel eingeben...\" variant=\"outlined\" value={titleValue} onChange={handleChangeTitle}/>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Beschreibung\r\n                    </Box>\r\n                    </Typography>\r\n                    <TextField id=\"description_textfield\" fullWidth={true} value={descriptionValue} onChange={handleChangeDescription} multiline={true} label=\"Beschreibung eingeben...\" variant=\"outlined\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Modul\r\n                    </Box>\r\n                    </Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"select-module-label\">&nbsp; Modul auswählen...</InputLabel>\r\n                      <Select labelId=\"select-module-label\" id=\"select-module\" variant=\"outlined\" value={modul} onChange={handleModuleChange}>\r\n                      {\r\n                      moduls?.map((item) => {\r\n                        return (\r\n                          <MenuItem key={item.id} value={item.name}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"select-document-label\">&nbsp; Format auswählen...</InputLabel>\r\n                      <Select labelId=\"select-document-label\" id=\"select-document\" variant=\"outlined\" value={document} onChange={handleDocumentChange}>\r\n                      \r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" className={classes.fab} onClick={submitTicket}>\r\n          &nbsp; Fertig &nbsp; \r\n          <CheckCircleIcon />\r\n        </Fab>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx",["156","157","158","159"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport TicketSearchBar from '../../components/SearchBar/TicketSearchBar';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {UserNameContext, UserRoleContext} from '../../util/UserCredsContext';\r\nimport auth from '../../util/auth';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function MeineTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n          console.log(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\");\r\n        \r\n        \r\n \r\n    }, [setTickets])\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n\r\n    // const columns: ColDef[] = [\r\n    //     { field: 'id', headerName: 'ID', width: 70 },\r\n    //     { field: 'title', headerName: 'Titel', width: 260 },\r\n    //     { field: 'description', headerName: 'Beschreibung', width: 390 },\r\n    //     { field: 'lastChangedDate', headerName: 'Änderungsdatum', width: 260 },\r\n    //   ];\r\n      \r\n    const myTickets = tickets.filter(ticket => ticket\r\n      // .createdBy.userName === userName\r\n      );\r\n\r\n    return (  \r\n      <div> \r\n      {/*<TicketSearchBar/>*/}\r\n\r\n      <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Meine Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? <h1>Loading...</h1> :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {myTickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard\r\n      id={ticket.id}\r\n      title={ticket.title} \r\n      description={ticket.description} \r\n      ticketClosed={ticket.ticketClosed}\r\n      createdBy={ticket.createdBy.userName}\r\n      modul={ticket.document.module.name}/>\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n   \r\n}\r\n\r\n    <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" className={classes.fab} onClick={handleCreateNewTicket}>\r\n      <AddIcon />\r\n      &nbsp; Neues Ticket\r\n    </Fab>\r\n\r\n    </div>\r\n\r\n    // <div style={{ height: 400, width: '100%' }}>\r\n    //   <DataGrid rows={tickets} columns={columns} pageSize={5} />\r\n    // </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx",["160","161","162"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport TicketSearchBar from '../../components/SearchBar/TicketSearchBar';\r\nimport auth from '../../util/auth';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {UserNameContext, UserRoleContext} from '../../util/UserCredsContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function MirZugewieseneTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        // .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\"); \r\n              // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      console.log(userName);\r\n    }, [userName])\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n\r\n    // const columns: ColDef[] = [\r\n    //     { field: 'id', headerName: 'ID', width: 70 },\r\n    //     { field: 'title', headerName: 'Titel', width: 260 },\r\n    //     { field: 'description', headerName: 'Beschreibung', width: 390 },\r\n    //     { field: 'lastChangedDate', headerName: 'Änderungsdatum', width: 260 },\r\n    //   ];\r\n      \r\n    const myTickets = tickets.filter(ticket => ticket.document.module.responsible.userName === userName);\r\n\r\n    // const result = words.filter(word => word.length > 6);\r\n\r\n    return (  \r\n      <div> \r\n        {/*<TicketSearchBar/>*/}\r\n\r\n        <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Mir zugewiesene Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? <h1>Loading...</h1> :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {myTickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard \r\n      id={ticket.id}\r\n      title={ticket.title} \r\n      description={ticket.description} \r\n      ticketClosed={ticket.ticketClosed}\r\n      createdBy={ticket.document.module.responsible.userName}\r\n      modul={ticket.document.module.name}/>\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n}\r\n\r\n    <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" className={classes.fab} onClick={handleCreateNewTicket}>\r\n      <AddIcon />\r\n      &nbsp; Neues Ticket\r\n    </Fab>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\SearchBar\\TicketSearchBar.tsx",[],["163","164"],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx",["165"],"// import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      marginLeft: theme.spacing(1)\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nexport default function TicketCard({title, description, ticketClosed, id, createdBy, modul}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black' }}>\r\n        <Link className={classes.link} to={`/ticketSuchen/${id}`}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Titel\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"secondary\">\r\n                <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {title}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Status\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {ticketClosed ? \"✓\" : \"⨯\"}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Modul\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {modul}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\ApiCalls.tsx",[],["166","167"],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\mui-style-theme.ts",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx",[],"C:\\Users\\User\\Korrektursystem\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":17,"column":9,"nodeType":"174","messageId":"175","endLine":17,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":41,"column":10,"nodeType":"174","messageId":"175","endLine":41,"endColumn":18},{"ruleId":"172","severity":1,"message":"177","line":41,"column":20,"nodeType":"174","messageId":"175","endLine":41,"endColumn":31},{"ruleId":"172","severity":1,"message":"178","line":85,"column":11,"nodeType":"174","messageId":"175","endLine":85,"endColumn":19},{"ruleId":"172","severity":1,"message":"179","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"172","severity":1,"message":"180","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":18},{"ruleId":"172","severity":1,"message":"181","line":8,"column":22,"nodeType":"174","messageId":"175","endLine":8,"endColumn":40},{"ruleId":"172","severity":1,"message":"182","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"183","line":5,"column":9,"nodeType":"174","messageId":"175","endLine":5,"endColumn":17},{"ruleId":"172","severity":1,"message":"184","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":12},{"ruleId":"172","severity":1,"message":"185","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":74,"column":8,"nodeType":"188","endLine":74,"endColumn":20,"suggestions":"189"},{"ruleId":"172","severity":1,"message":"179","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"172","severity":1,"message":"180","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":18},{"ruleId":"172","severity":1,"message":"190","line":8,"column":26,"nodeType":"174","messageId":"175","endLine":8,"endColumn":41},{"ruleId":"186","severity":1,"message":"191","line":36,"column":8,"nodeType":"188","endLine":36,"endColumn":20,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"179","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":23},{"ruleId":"172","severity":1,"message":"180","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":18},{"ruleId":"172","severity":1,"message":"190","line":9,"column":26,"nodeType":"174","messageId":"175","endLine":9,"endColumn":41},{"ruleId":"168","replacedBy":"193"},{"ruleId":"170","replacedBy":"194"},{"ruleId":"172","severity":1,"message":"195","line":10,"column":8,"nodeType":"174","messageId":"175","endLine":10,"endColumn":12},{"ruleId":"168","replacedBy":"196"},{"ruleId":"170","replacedBy":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'getUserName' is defined but never used.","Identifier","unusedVar","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'response' is assigned a value but never used.","'TicketSearchBar' is defined but never used.","'jwt_decode' is defined but never used.","'getUserCredentials' is defined but never used.","'Button' is defined but never used.","'sendData' is defined but never used.","'auth' is defined but never used.","'FormHelperText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'moduls'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'UserRoleContext' is defined but never used.","React Hook useEffect has missing dependencies: 'setUserName' and 'userName'. Either include them or remove the dependency array.",["201"],["198"],["199"],"'Chip' is defined but never used.",["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [moduls, setModules]",{"range":"206","text":"207"},"Update the dependencies array to be: [setTickets, setUserName, userName]",{"range":"208","text":"209"},[2252,2264],"[moduls, setModules]",[1440,1452],"[setTickets, setUserName, userName]"]