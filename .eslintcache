[{"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx":"1","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx":"3","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx":"4","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx":"5","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx":"6","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx":"7","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx":"8","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx":"9","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx":"10","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx":"11","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx":"12","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\HomePage\\HomePage.tsx":"13","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx":"14","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx":"15","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx":"16","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx":"17","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx":"18","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx":"19","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx":"20","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts":"21","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx":"22","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx":"23","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx":"24","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx":"25","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js":"26","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx":"27","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx":"28","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx":"29","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\mui-style-theme.ts":"30","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx":"31","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx":"32","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx":"33","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx":"34","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx":"35","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx":"36","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx":"37","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx":"38","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx":"39","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx":"40"},{"size":1615,"mtime":1619863881329,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1898,"mtime":1619341753407,"results":"44","hashOfConfig":"42"},{"size":2193,"mtime":1619878546549,"results":"45","hashOfConfig":"42"},{"size":997,"mtime":1619341753423,"results":"46","hashOfConfig":"42"},{"size":4994,"mtime":1619863881325,"results":"47","hashOfConfig":"42"},{"size":1359,"mtime":1619341753420,"results":"48","hashOfConfig":"42"},{"size":5657,"mtime":1620068807480,"results":"49","hashOfConfig":"42"},{"size":1536,"mtime":1619340566108,"results":"50","hashOfConfig":"42"},{"size":7610,"mtime":1620067279399,"results":"51","hashOfConfig":"42"},{"size":3666,"mtime":1619889876607,"results":"52","hashOfConfig":"42"},{"size":1692,"mtime":1620067957582,"results":"53","hashOfConfig":"42"},{"size":656,"mtime":1619341753443,"results":"54","hashOfConfig":"42"},{"size":372,"mtime":1619340566134,"results":"55","hashOfConfig":"42"},{"size":401,"mtime":1619340566108,"results":"56","hashOfConfig":"42"},{"size":377,"mtime":1619340566106,"results":"57","hashOfConfig":"42"},{"size":3203,"mtime":1619723466696,"results":"58","hashOfConfig":"42"},{"size":10435,"mtime":1620067279397,"results":"59","hashOfConfig":"42"},{"size":378,"mtime":1619341753468,"results":"60","hashOfConfig":"42"},{"size":763,"mtime":1619341753473,"results":"61","hashOfConfig":"42"},{"size":1198,"mtime":1619341753462,"results":"62","hashOfConfig":"42"},{"size":3426,"mtime":1619863881320,"results":"63","hashOfConfig":"42"},{"size":762,"mtime":1619341753471,"results":"64","hashOfConfig":"42"},{"size":738,"mtime":1619341753460,"results":"65","hashOfConfig":"42"},{"size":2022,"mtime":1619341753446,"results":"66","hashOfConfig":"42"},{"size":1958,"mtime":1619341753475,"results":"67","hashOfConfig":"42"},{"size":7859,"mtime":1620067894180,"results":"68","hashOfConfig":"42"},{"size":3374,"mtime":1619889841221,"results":"69","hashOfConfig":"42"},{"size":3784,"mtime":1620070718316,"results":"70","hashOfConfig":"42"},{"size":1016,"mtime":1619341753437,"results":"71","hashOfConfig":"42"},{"size":380,"mtime":1619873469010,"results":"72","hashOfConfig":"42"},{"size":1038,"mtime":1619873469011,"results":"73","hashOfConfig":"42"},{"size":1984,"mtime":1619873469012,"results":"74","hashOfConfig":"42"},{"size":1423,"mtime":1620067279393,"results":"75","hashOfConfig":"42"},{"size":364,"mtime":1619701568950,"results":"76","hashOfConfig":"42"},{"size":370,"mtime":1619720073442,"results":"77","hashOfConfig":"42"},{"size":388,"mtime":1619863881336,"results":"78","hashOfConfig":"42"},{"size":875,"mtime":1619878546543,"results":"79","hashOfConfig":"42"},{"size":2742,"mtime":1620067871732,"results":"80","hashOfConfig":"42"},{"size":3907,"mtime":1620067871721,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1ged5a1",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"142"},"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\index.tsx",["179"],"// import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {TicketsProvider} from './pages/AllTickets/TicketsContext';\r\nimport {TicketProvider} from './components/Ticket/TicketContext';\r\nimport {MobileOpenProvider} from './components/Drawer/MobileOpenContext';\r\nimport { LoginProvider } from './util/LoginContext';\r\nimport {UserNameProvider} from './util/UserCredsContext';\r\nimport {UserRoleProvider} from './util/UserCredsContext';\r\nimport {CommentsProvider} from './components/Comments/CommentContext';\r\nimport {ModulesProvider} from './pages/NewTicket/ModulesContext';\r\nimport {DocumentsProvider} from './pages/NewTicket/DocumentsContext';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <LoginProvider>\r\n    <UserNameProvider> \r\n      <UserRoleProvider>\r\n        <TicketsProvider>\r\n          <MobileOpenProvider>\r\n            <CommentsProvider>\r\n              <ModulesProvider>\r\n                <DocumentsProvider>\r\n                  <App />\r\n                </DocumentsProvider>\r\n              </ModulesProvider>\r\n            </CommentsProvider>\r\n          </MobileOpenProvider>\r\n        </TicketsProvider>\r\n      </UserRoleProvider>\r\n    </UserNameProvider>\r\n  </LoginProvider>,\r\n    //,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["180","181"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\App.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\layouts\\Navigation\\Navigation.tsx",["182","183","184"],"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport {AnchorElProvider} from '../../components/AppBar/AnchorElContext';\r\n\r\nimport DrawerPermanent from '../../components/Drawer/DrawerPermanent';\r\nimport DrawerMobile from '../../components/Drawer/DrawerMobile';\r\nimport AppBar from '../../components/AppBar/AppBar';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport '../../style-theme'\r\nimport { theme } from '../../style-theme';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    drawer: {\r\n      [theme.breakpoints.up('md')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up('md')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport default function Navigation(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div>\r\n      <CssBaseline />\r\n      <AnchorElProvider>\r\n        <AppBar/>\r\n      </AnchorElProvider>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden mdUp >\r\n          <DrawerMobile history={props.history}/>\r\n        </Hidden>\r\n        <Hidden smDown >\r\n          <DrawerPermanent history={props.history}/>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerPermanent.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerContent.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\DrawerMobile.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AppBar.tsx",["185","186","187","188","189","190","191"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport  {UserMenuId} from './MenuUser';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {MobileOpenContext} from '../Drawer/MobileOpenContext';\r\nimport {AnchorElContext} from './AnchorElContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TicketsContext } from '../../pages/AllTickets/TicketsContext';\r\nimport {getTicketsByTitle, getAllTickets} from '../../util/ApiCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n          align: 'center'\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'flex',\r\n      },\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 101,\r\n      // [theme.breakpoints.up('md')]: {\r\n      //   width: `calc(100% - ${drawerWidth}px)`,\r\n      //   marginLeft: drawerWidth,\r\n      // },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nfunction StyledAppBar() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  // Auskommentiert, da sich der Z-Index des Menüs irgendwie nicht ändern lässt\r\n  const [, setAnchorEl] = React.useContext(AnchorElContext);\r\n  const [tickets, setTickets] = useContext(TicketsContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [mobileOpen, setMobileOpen] = useContext(MobileOpenContext);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  useEffect(() => {\r\n    title === '' ?\r\n    getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n      })\r\n      :\r\n    getTicketsByTitle(title)\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n  }, [title])\r\n\r\n  const goToSearch = () => {\r\n    history.push('/ticketSuchen');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Easy-Ticket\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          <div className={classes.search}>\r\n            <IconButton color=\"primary\" aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              placeholder=\"Ticket suchen...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleSearch}\r\n              onClick={goToSearch}\r\n            />\r\n          </div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={UserMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Irgendwie lässt sich der Z-Index des Menüs nicht ändern. Deshalb erstmal auskommentiert. */}\r\n      {/* <MenuUser/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StyledAppBar;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\MenuUser.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\NewTicket.tsx",["192","193","194"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\AllTickets.tsx",["195","196","197","198","199","200","201"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\nimport { css } from \"@emotion/core\";\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {getUserName, getUserCredentials} from '../../util/UserCreds';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {TicketsContext} from './TicketsContext';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport NewElementButton from '../../components/Button/NewTicketButton'\r\n\r\n\r\n\r\nexport default function AllTickets() {\r\n\r\n    const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n      getAllTickets()\r\n      .then(data => {\r\n        setTickets(data);\r\n        console.log(data);\r\n      })\r\n      .then(() => setIsLoading(false))\r\n      console.log(\"Api Call from AllTickets\");\r\n      console.log(getUserName());      \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n    // const columns: ColDef[] = [\r\n    //     { field: 'id', headerName: 'ID', width: 70 },\r\n    //     { field: 'title', headerName: 'Titel', width: 260 },\r\n    //     { field: 'description', headerName: 'Beschreibung', width: 390 },\r\n    //     { field: 'lastChangedDate', headerName: 'Änderungsdatum', width: 260 },\r\n    //   ];\r\n      \r\n\r\n    return (  \r\n      <div> \r\n\r\n<Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Alle Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n    <div>\r\n      {isLoading ?\r\n      null\r\n      :\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {tickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard \r\n      id={ticket.id}\r\n      title={ticket.title} \r\n        description={ticket.description} \r\n        ticketClosed={ticket.ticketClosed}\r\n        createdBy={ticket.createdBy.userName}\r\n        modul={ticket.document.module.name}\r\n        />\r\n    </Grid>\r\n    ))}\r\n  </Grid>\r\n}\r\n  </div>\r\n      <NewElementButton/>\r\n    <Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n\r\n    // <div style={{ height: 400, width: '100%' }}>\r\n    //   <DataGrid rows={tickets} columns={columns} pageSize={5} />\r\n    // </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Statistics\\Statistics.tsx",["202"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\HomePage\\HomePage.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\AllTickets\\TicketsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Drawer\\MobileOpenContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\AppBar\\AnchorElContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Card\\TicketCard.tsx",["203"],"// import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      marginLeft: theme.spacing(1)\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    }\r\n  }),\r\n);\r\n\r\n\r\n\r\nexport default function TicketCard({title, description, ticketClosed, id, createdBy, \r\n                                    modul\r\n                                   }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black' }}>\r\n        <Link className={classes.link} to={`/ticketSuchen/${id}`}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          \r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Titel\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"secondary\">\r\n                <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {title}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Status\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {ticketClosed ? \"✓\" : \"⨯\"}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                Modul\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n              <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                {modul}\r\n              </Box>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n       \r\n        </CardContent>\r\n      </CardActionArea>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\Ticket.tsx",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import  {useState,useEffect, useContext} from 'react'\r\nimport {CommentsContext} from '../Comments/CommentContext';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {getTicketById, changeTicketStatus, getCommentByTicketId} from '../../util/ApiCalls';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Divider } from '@material-ui/core';\r\nimport classes from '*.module.css';\r\nimport { AutoSizer } from '@material-ui/data-grid';\r\nimport Comments from '../Comments/Comments';\r\nimport NewComment from '../Comments/NewComment';\r\nimport {TicketContext} from './TicketContext';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Box from '@material-ui/core/Box'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport auth from '../../util/auth'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    title: {\r\n        width: '50ch'\r\n    },\r\n    description: {\r\n        width: '150ch',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n      textTransform: 'none'\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nfunction Ticket({match}) {\r\n  const classes = useStyles();\r\n\r\n    const [ticket, setTicket] = useState<any>();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [comments, setComments] = useContext(CommentsContext);\r\n    const [status, setStatusValue] = useState<any>();\r\n\r\n    var statusIsChanged=false;\r\n\r\n  \r\n    let dateCreated;\r\n\r\n    useEffect(() => {\r\n        getTicketById(match.params.id)\r\n        .then(data => {\r\n          setTicket(data);\r\n          setStatusValue(data.ticketClosed);\r\n          console.log(data.ticketClosed);\r\n        })\r\n        .then(() => {\r\n          setIsLoading(false);\r\n        })\r\n        console.log('Called Ticket with Id ' + match.params.id);\r\n    },[match.params.id])\r\n\r\n    const handleStatusSwitch = (event) => {\r\n      setStatusValue(event.target.checked);\r\n      console.log(\"A!!!!!!\")\r\n      console.log(event.target.checked)\r\n      changeTicketStatus(ticket.id);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n{isLoading ? \r\n            <h1></h1> : \r\n            <div>\r\n<Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <CreateIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Ticketübersicht\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n          <Grid item xs={\"auto\"}>\r\n            <Card variant='outlined' style={{ borderRadius: 15, borderWidth: 2, borderColor: 'black'}}>\r\n              <CardContent>\r\n                <Grid container justify=\"space-around\" alignItems=\"flex-start\" spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Titel\r\n                    </Box>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.title}\r\n                    </Box>\r\n                    </Typography>                  \r\n                    </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Beschreibung\r\n                    </Box>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.description}\r\n                    </Box>\r\n                    </Typography>                    \r\n                    </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Modul\r\n                    </Box>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.document.module.name}\r\n                    </Box>\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Format\r\n                    </Box>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.document.name}\r\n                    </Box>\r\n                    </Typography>  \r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Status\r\n                    </Box>\r\n                    </Typography>\r\n                    {\r\n                      ticket.document.module.responsible.userName===auth.getUserName() ?\r\n                      <FormGroup>\r\n                        <FormControlLabel label={status ? \"Geschlossen\" : \"Offen\"} control={<Switch\r\n                      checked={status}\r\n                      onChange={handleStatusSwitch}\r\n                      name=\"checkedA\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />}/>\r\n                      </FormGroup> :\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.ticketClosed ? \"Geschlossen\" : \"Offen\"}\r\n                    </Box>\r\n                    </Typography>\r\n                    }\r\n                    <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontWeight=\"fontWeightBold\" fontSize={18}>\r\n                      Modul\r\n                    </Box>\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n                    <Box fontSize={18}>\r\n                      {ticket.document.module.name}\r\n                    </Box>\r\n                    </Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                              <Divider variant=\"middle\"/>\r\n\r\n              <Comments ticketID={ticket.id}/>\r\n              </CardContent>\r\n            </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography gutterBottom variant=\"body1\" component=\"h2\" color=\"primary\">\r\n        {/* <Box fontSize={18}>\r\n        Das Ticket wurde am \r\n        {ticket.createdDate.split('T')[0].split('-')[2]}.\r\n        {ticket.createdDate.split('T')[0].split('-')[1]}.\r\n        {ticket.createdDate.split('T')[0].split('-')[0]} \r\n        erstellt und zuletzt am \r\n        {ticket.lastChangedDate.split('T')[0].split('-')[2]}.\r\n        {ticket.lastChangedDate.split('T')[0].split('-')[1]}.\r\n        {ticket.lastChangedDate.split('T')[0].split('-')[0]} \r\n        um\r\n        {ticket.lastChangedDate.split('T')[1].split(':')[0]}:\r\n        {ticket.lastChangedDate.split('T')[1].split(':')[1]} \r\n        Uhr geändert.\r\n        </Box> */}\r\n        </Typography>\r\n</div>}\r\n<Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Ticket\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\LoginContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCredsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\style-theme.ts",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\DashBoard.tsx",["222","223","224"],"import {useContext, useEffect} from 'react';\r\nimport {getAllTickets} from './util/ApiCalls';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Ticket from './components/Ticket/Ticket';\r\nimport Navigation from './layouts/Navigation/Navigation';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AllTickets from './pages/AllTickets/AllTickets';\r\nimport NewTicket from './pages/NewTicket/NewTicket';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport MeineTickets from './pages/MeineTickets/MeineTickets';\r\nimport MirZugewieseneTickets from './pages/MirZugewieseneTickets/MirZugewieseneTickets';\r\nimport {TicketsContext} from './pages/AllTickets/TicketsContext';\r\nimport {LoginContext} from './util/LoginContext';\r\nimport auth from './util/auth'\r\nimport {UserNameContext, UserRoleContext} from './util/UserCredsContext';\r\nimport {ModulesContext} from './pages/NewTicket/ModulesContext';\r\nimport {getUserName,  getUserCredentials} from './util/UserCreds';\r\nimport {DocumentsContext} from './pages/NewTicket/DocumentsContext';\r\n\r\n\r\n// import ApiPreCalls from './ApiCalls/ApiPreCalls';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const [tickets,setTickets] = useContext(TicketsContext);\r\n  const [isLoggedIn, setIsLoggedIn] = useContext(LoginContext);\r\n  const [userName,] = useContext(UserNameContext);\r\n  const [userRole, setUserRole] = useContext(UserRoleContext);\r\n  const [moduls,setModules] = useContext(ModulesContext);\r\n  const [documents,setDocuments] = useContext(DocumentsContext);\r\n\r\n\r\n  useEffect(() => {\r\n    getAllTickets()\r\n    .then(data => {\r\n      setTickets(data);\r\n    })\r\n    console.log(\"Api Call from App\");\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, []) \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      setIsLoggedIn(true);\r\n    }\r\n    console.log(isLoggedIn);\r\n    console.log(auth.getUserRole());\r\n    console.log(userName);\r\n    console.log(getUserCredentials());\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n  return (\r\n\r\n    <div className= {classes.root}>\r\n        <Router>\r\n          <Navigation history={props.history}/> \r\n          <main className={classes.content}>               \r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n              <Route path=\"/newticket\" render={() => <NewTicket moduls={moduls} setModules={setModules} documents={documents} setDocuments={setDocuments}/>}/>\r\n              <Route path=\"/ticketSuchen\" exact render={() => <AllTickets />}/>\r\n              <Route path=\"/ticketSuchen/:id\" component={Ticket}/>\r\n              <Route path=\"/statistics\" component={Statistics}/>\r\n              <Route path=\"/meineTickets\" render={() => <MeineTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n              <Route path=\"/MirZugewieseneTickets\" render={() => <MirZugewieseneTickets tickets={tickets} setTickets={setTickets}/>}/>\r\n          </Switch>\r\n          </main>    \r\n        </Router>            \r\n      </div>       \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\UserCreds.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\protectedRoute.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\auth.js",[],["225","226"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\util\\ApiCalls.tsx",["227"],"\r\nconst url = 'http://localhost:59543/api/';\r\n//https://www.hetfeld.name/ticket_backend/api/\r\n//http://localhost:59543/api/\r\n//https://easyticketapi.azurewebsites.net\r\n\r\n//Login und Register\r\nexport const login = async(userName, password) => {\r\n    const response = await fetch(url + 'auth/login',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n          userName: userName,\r\n          password: password\r\n              }), \r\n      mode: 'cors',\r\n      headers: {\r\n              'Access-Control-Allow-Origin': 'https://easyticketapi.azurewebsites.net',\r\n              'Content-Type' : 'application/json'\r\n          }\r\n  });\r\n  try {\r\n      console.log(response);\r\n      if (response.ok) {\r\n          const jsonResponse = await response.json();\r\n          return jsonResponse;\r\n      }\r\n      throw new Error(\"Login failed\");\r\n    }catch(error) {\r\n        console.log(\"invalid login\");\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n//Tickets abrufen\r\nexport const getAllTickets = async() => {\r\n    const response = await fetch(url + 'tickets',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n//Tickets suchen\r\nexport const getTicketsByTitle = async(title) => {\r\n    if (title !== '' && title !== null) {\r\n        const response = await fetch(url + 'Tickets/SearchByTitle/' + title,\r\n        {\r\n            headers: {\r\n                    'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        }\r\n        );\r\n        try {\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse;\r\n            }\r\n            throw new Error('Request Failed!');\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCommentByTicketId = async(TicketId) => {\r\n    const response = await fetch(url + 'Comments/GetByTicketId/' + TicketId,\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsImZeitverlauf = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketTimeline/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getTicketsNachModulen = async() => {\r\n    const response = await fetch(url + 'Tickets/TicketsPerModule/',\r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n//Ticket erstellen\r\n// export const sendData = async( title, description) => {\r\n//     await fetch(url  + 'tickets',\r\n//     {\r\n//         method: 'POST',\r\n//         body: JSON.stringify({\r\n//             title: title,\r\n//             description: description,\r\n//             createdBy: {\r\n//                 // userName: creator\r\n//             }\r\n//         }), \r\n//         mode: 'cors',\r\n//         headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n//             }\r\n//     });\r\n// }\r\n\r\nexport const getTicketById = async(id) => {\r\n    const response = await fetch(url + `Tickets/${id}`, \r\n    {\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const newComment = async( ticketID, text) => {\r\n    await fetch(url  + 'Comments',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            ticketID: ticketID,\r\n            text: text            \r\n        }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n    }\r\nexport const createNewTicket = async(title, description, documentId) => {\r\n    const response = await fetch(url + 'Tickets',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            title: title,\r\n            description: description,\r\n            documentId: documentId\r\n            }), \r\n        mode: 'cors',\r\n        headers: {\r\n                'Content-Type' : 'application/json',\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    });\r\n}\r\n\r\n\r\n// export const removeComment = async( ticketID, text) => {\r\n//     await fetch(url  + 'Comments',\r\n//     {\r\n//         method: 'POST',\r\n//         body: JSON.stringify({\r\n//             ticketID: ticketID,\r\n//             text: text            \r\n//         }), \r\n//         mode: 'cors',\r\n//         headers: {\r\n//                 'Content-Type' : 'application/json',\r\n//                 'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n//             }\r\n//     });\r\n// }\r\n\r\nexport const getModules = async() => {\r\n    const response = await fetch(url + 'Modules',\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};\r\n\r\n\r\nexport const getDocuments = async( moduleId ) => {\r\n    const response = await fetch(url + `Documents/GetByModuleId/${moduleId}`,\r\n    {\r\n        method: 'GET',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};\r\n\r\nexport const changeTicketStatus = async( ticketId ) => {\r\n    const response = await fetch(url + `Tickets/ChangeStatus/${ticketId}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }\r\n    );\r\n    try {\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            /*console.log(jsonResponse)*/\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('Request Failed!');\r\n    } catch(error) {\r\n        /*console.log(error);*/\r\n    }\r\n};","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MirZugewieseneTickets\\MirZugewieseneTickets.tsx",["228","229","230","231","232"],"import  {useEffect, useState, useContext} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {getAllTickets} from '../../util/ApiCalls';\r\n// import { DataGrid, ColDef} from '@material-ui/data-grid';\r\nimport TicketCard from '../../components/Card/TicketCard';\r\nimport auth from '../../util/auth';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {UserNameContext, UserRoleContext} from '../../util/UserCredsContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function MirZugewieseneTickets({tickets, setTickets}) {\r\n\r\n    // const [tickets,setTickets] = useContext(TicketsContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useContext(UserNameContext);\r\n\r\n    useEffect(() => {\r\n        getAllTickets()\r\n        .then(data => {\r\n          setTickets(data);\r\n        })\r\n        .then(() => setIsLoading(false))\r\n        .then(() => setUserName(auth.getUserName()))\r\n        // .then(() => console.log(userName));\r\n        console.log(\"Api Call from MyTickets\"); \r\n              // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      console.log(userName);\r\n    }, [userName])\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        textTransform: 'none'\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      }\r\n    }),\r\n  );\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCreateNewTicket = () => {\r\n    history.push('/newTicket');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n    const myTickets = tickets.filter(ticket => ticket.document.module.responsible.userName === userName\r\n      );\r\n\r\n\r\n    return (  \r\n      <div> \r\n        {/*<TicketSearchBar/>*/}\r\n\r\n        <Grid container direction=\"row\" alignItems=\"center\" style={{ marginBottom: 15 }}>\r\n          <Grid item>\r\n            <MailIcon fontSize='large'/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            &nbsp; Mir zugewiesene Tickets\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    {isLoading ? null :\r\n\r\n <Grid container \r\n  justify=\"space-around\"\r\n  alignItems=\"flex-start\" \r\n  spacing={4}>\r\n    {myTickets.map(ticket => (\r\n      <Grid item  xs={12} sm={6} md={4} lg={5} key={ticket.id} >\r\n      <TicketCard \r\n      id={ticket.id}\r\n      title={ticket.title} \r\n      description={ticket.description} \r\n      ticketClosed={ticket.ticketClosed}\r\n      createdBy={ticket.document.module.responsible.userName}\r\n      modul={ticket.document.module.name}\r\n        />\r\n\r\n    </Grid>\r\n    ))}\r\n      </Grid>\r\n}\r\n\r\n<Backdrop className={classes.backdrop} open={isLoading} transitionDuration={300}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\MeineTickets\\MeineTickets.tsx",["233","234","235","236","237","238"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\mui-style-theme.ts",[],["239","240"],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\CommentContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comments.tsx",["241","242","243","244"],"import React ,{useEffect, useContext} from 'react'\r\nimport {CommentsContext} from './CommentContext';\r\nimport Comment from './Comment';\r\nimport NewComment from './NewComment';\r\nimport {getTicketById, changeTicketStatus, getCommentByTicketId} from '../../util/ApiCalls';\r\nimport {alterInMs} from '../../util/Date';\r\n\r\nfunction Comments({ticketID}) {\r\n    \r\n    const [comments, setComments] = useContext(CommentsContext);\r\n\r\n    useEffect(() => {\r\n        getCommentByTicketId(ticketID)\r\n            .then(data => {\r\n                setComments(data);\r\n                console.log(data);\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <NewComment ticketID={ticketID}/>\r\n            {comments.map(comment => (\r\n                <Comment \r\n                key={comment.id} \r\n                commentText={comment.text} \r\n                commentCreator={comment.createdBy.userName}\r\n                commentDate={comment.createdDate}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\NewComment.tsx",["245","246","247","248","249","250","251"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {newComment} from '../../util/ApiCalls';\r\nimport {CommentsContext} from '../Comments/CommentContext';\r\nimport { isNullOrUndefined } from 'util';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nfunction NewComment({ticketID}) {\r\n    const classes = useStyles();\r\n    const [comment, setComment] = useState('');\r\n    const [rerender, setRerender] = useContext(CommentsContext);\r\n\r\n    const changeValue = (e) => {\r\n        setComment(e.target.value);\r\n    }\r\n    const handleSubmit = () => {\r\n        newComment(ticketID, comment);\r\n        // .then(data => {\r\n        //     console.log(data);\r\n        // })\r\n        // .then(() => setRerender(!rerender));\r\n        setRerender(!rerender);\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Neuer Kommentar\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          onChange={changeValue}\r\n          value={comment}\r\n        />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n        onClick={handleSubmit}\r\n      >\r\n        Save\r\n      </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewComment\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Comments\\Comment.tsx",["252","253","254","255","256","257"],"import React ,{useEffect, useContext} from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {TicketContext} from '../Ticket/TicketContext';\r\n\r\nfunction Comment({commentText, commentCreator, commentDate}) {\r\n    const [ticket, setTicket] = useContext(TicketContext);\r\n\r\n    const dateString = Date.parse(commentDate);\r\n    const date = new Date(dateString);\r\n\r\n    const handleDelete = () => {\r\n\r\n        // ticket.comments.map(e => {\r\n        //     e.id !== comment.id\r\n        // });\r\n\r\n    }\r\n\r\n    return (\r\n        <Card >\r\n            <CardContent>\r\n                <div>\r\n\r\n                <Typography variant=\"body1\">\r\n                    {commentText}\r\n                </Typography>\r\n                <Typography display='inline' align='left' variant=\"caption\">\r\n                    von: {commentCreator} \r\n                </Typography>      \r\n                <br></br>\r\n                <Typography display='inline' align='right'variant=\"caption\"> \r\n                    Erstellt am : {date.toLocaleDateString()} um {date.toLocaleTimeString()}\r\n                </Typography> \r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Ticket\\TicketContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\ModulesContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\pages\\NewTicket\\DocumentsContext.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Button\\NewTicketButton.tsx",[],"C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsZeitverlauf.jsx",["258","259","260"],"\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport {getTicketsImZeitverlauf} from '../../util/ApiCalls';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\ncreateStyles({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    textTransform: 'none'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  container: {\r\n    width: '50',\r\n    height: '200'\r\n  }\r\n}),\r\n);\r\n\r\n\r\n  function TicketsZeitverlauf() {\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsImZeitverlauf();\r\n      // console.log(result);\r\n      result.forEach(element => {\r\n        labels.push(element.month);\r\n        openTickets.push(element.openedTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'geöffnete Tickets',\r\n          data: openTickets,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'geschlossene Tickets',\r\n          data: closedTickets,\r\n          backgroundColor: 'rgb(54, 162, 235)',\r\n          borderColor: 'rgba(54, 162, 235, 0.2)',\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    \r\n    const options = {\r\n      // responsive: true,\r\n      // maintainAspectRatio: false,\r\n      pugins: {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Anzahl der erstellten Tickets im Zeitverlauf'\r\n        },\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n\r\n    return (\r\n      <div >\r\n        \r\n      <canvas id=\"top\" width='800' height='20'></canvas>\r\n      {/* <article height='60vh'> */}\r\n      <Line data={data} options={options} />\r\n      {/* </article> */}\r\n      <canvas id=\"middle\" width='800' height='40'></canvas>\r\n      </div>\r\n    );\r\n  } \r\n    \r\n\r\n\r\nexport default TicketsZeitverlauf\r\n","C:\\Users\\mchlz\\projects\\ticketsystem_frontend\\src\\components\\Charts\\TicketsNachModulen.jsx",["261","262","263","264"],"import React, {useState, useEffect} from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {getTicketsNachModulen} from '../../util/ApiCalls';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\ncreateStyles({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    textTransform: 'none'\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  container: {\r\n    width: '50',\r\n    height: '200'\r\n  }\r\n}),\r\n);\r\n\r\n\r\n  function TicketsNachModulen() {\r\n\r\n    const [labels, setLabels] = useState([]);\r\n    const [openTickets, setOpenTickets] = useState([]);\r\n    const [closedTickets, setClosedTickets] = useState([]);\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    useEffect(async() => {\r\n      let labels=[];\r\n      let openTickets=[];\r\n      let closedTickets=[];\r\n\r\n      const result = await getTicketsNachModulen();\r\n      // console.log(result);\r\n      result.forEach(element => {\r\n        labels.push(element.modulName);\r\n        openTickets.push(element.openTickets);\r\n        closedTickets.push(element.closedTickets);\r\n      });\r\n      setLabels(labels);\r\n      setClosedTickets(closedTickets);\r\n      setOpenTickets(openTickets);\r\n\r\n      console.log(labels);\r\n      console.log(openTickets);\r\n      console.log(closedTickets);\r\n    },[])\r\n    \r\n    const dataOpen = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'geöffnete Tickets',\r\n          data: openTickets,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n          ],\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    const dataClosed = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'geöffnete Tickets',\r\n            data: openTickets,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            fill: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {/* <article height='60vh'> */}\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n                Offene Tickets\r\n    </Typography>\r\n      <canvas id=\"middle\" width='800' height='40'></canvas>\r\n      <Pie data={dataOpen}/>\r\n      <Typography align='center' gutterBottom variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            Geschlossene Tickets\r\n    </Typography>\r\n      <canvas id=\"middle\" width='800' height='40'></canvas>\r\n      <Pie data={dataClosed}/>\r\n      {/* </article> */}\r\n      \r\n      </div>\r\n    );\r\n  } \r\n    \r\n\r\n\r\nexport default TicketsNachModulen",{"ruleId":"265","severity":1,"message":"266","line":7,"column":9,"nodeType":"267","messageId":"268","endLine":7,"endColumn":23},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"265","severity":1,"message":"273","line":15,"column":8,"nodeType":"267","messageId":"268","endLine":15,"endColumn":11},{"ruleId":"265","severity":1,"message":"274","line":16,"column":8,"nodeType":"267","messageId":"268","endLine":16,"endColumn":15},{"ruleId":"265","severity":1,"message":"275","line":17,"column":10,"nodeType":"267","messageId":"268","endLine":17,"endColumn":20},{"ruleId":"265","severity":1,"message":"276","line":7,"column":8,"nodeType":"267","messageId":"268","endLine":7,"endColumn":13},{"ruleId":"265","severity":1,"message":"277","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":16},{"ruleId":"265","severity":1,"message":"278","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":25},{"ruleId":"265","severity":1,"message":"279","line":15,"column":8,"nodeType":"267","messageId":"268","endLine":15,"endColumn":16},{"ruleId":"265","severity":1,"message":"280","line":16,"column":8,"nodeType":"267","messageId":"268","endLine":16,"endColumn":12},{"ruleId":"265","severity":1,"message":"281","line":100,"column":10,"nodeType":"267","messageId":"268","endLine":100,"endColumn":17},{"ruleId":"282","severity":1,"message":"283","line":127,"column":6,"nodeType":"284","endLine":127,"endColumn":13,"suggestions":"285"},{"ruleId":"265","severity":1,"message":"286","line":4,"column":8,"nodeType":"267","messageId":"268","endLine":4,"endColumn":14},{"ruleId":"265","severity":1,"message":"287","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":12},{"ruleId":"265","severity":1,"message":"288","line":14,"column":8,"nodeType":"267","messageId":"268","endLine":14,"endColumn":22},{"ruleId":"265","severity":1,"message":"289","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":13},{"ruleId":"265","severity":1,"message":"290","line":7,"column":8,"nodeType":"267","messageId":"268","endLine":7,"endColumn":18},{"ruleId":"265","severity":1,"message":"291","line":8,"column":22,"nodeType":"267","messageId":"268","endLine":8,"endColumn":40},{"ruleId":"265","severity":1,"message":"273","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":11},{"ruleId":"265","severity":1,"message":"274","line":13,"column":8,"nodeType":"267","messageId":"268","endLine":13,"endColumn":15},{"ruleId":"265","severity":1,"message":"286","line":18,"column":8,"nodeType":"267","messageId":"268","endLine":18,"endColumn":14},{"ruleId":"265","severity":1,"message":"292","line":60,"column":9,"nodeType":"267","messageId":"268","endLine":60,"endColumn":30},{"ruleId":"265","severity":1,"message":"293","line":30,"column":11,"nodeType":"267","messageId":"268","endLine":30,"endColumn":18},{"ruleId":"265","severity":1,"message":"294","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":12},{"ruleId":"265","severity":1,"message":"295","line":4,"column":44,"nodeType":"267","messageId":"268","endLine":4,"endColumn":64},{"ruleId":"265","severity":1,"message":"294","line":9,"column":8,"nodeType":"267","messageId":"268","endLine":9,"endColumn":12},{"ruleId":"265","severity":1,"message":"296","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":15},{"ruleId":"265","severity":1,"message":"297","line":12,"column":10,"nodeType":"267","messageId":"268","endLine":12,"endColumn":19},{"ruleId":"265","severity":1,"message":"298","line":14,"column":8,"nodeType":"267","messageId":"268","endLine":14,"endColumn":18},{"ruleId":"265","severity":1,"message":"299","line":15,"column":9,"nodeType":"267","messageId":"268","endLine":15,"endColumn":22},{"ruleId":"265","severity":1,"message":"300","line":17,"column":8,"nodeType":"267","messageId":"268","endLine":17,"endColumn":19},{"ruleId":"265","severity":1,"message":"301","line":18,"column":8,"nodeType":"267","messageId":"268","endLine":18,"endColumn":14},{"ruleId":"265","severity":1,"message":"302","line":19,"column":8,"nodeType":"267","messageId":"268","endLine":19,"endColumn":23},{"ruleId":"265","severity":1,"message":"273","line":20,"column":8,"nodeType":"267","messageId":"268","endLine":20,"endColumn":11},{"ruleId":"265","severity":1,"message":"303","line":22,"column":8,"nodeType":"267","messageId":"268","endLine":22,"endColumn":17},{"ruleId":"265","severity":1,"message":"304","line":23,"column":8,"nodeType":"267","messageId":"268","endLine":23,"endColumn":18},{"ruleId":"265","severity":1,"message":"279","line":24,"column":8,"nodeType":"267","messageId":"268","endLine":24,"endColumn":16},{"ruleId":"265","severity":1,"message":"305","line":79,"column":12,"nodeType":"267","messageId":"268","endLine":79,"endColumn":20},{"ruleId":"265","severity":1,"message":"306","line":79,"column":22,"nodeType":"267","messageId":"268","endLine":79,"endColumn":33},{"ruleId":"265","severity":1,"message":"307","line":82,"column":9,"nodeType":"267","messageId":"268","endLine":82,"endColumn":24},{"ruleId":"265","severity":1,"message":"308","line":85,"column":9,"nodeType":"267","messageId":"268","endLine":85,"endColumn":20},{"ruleId":"309","severity":1,"message":"310","line":110,"column":13,"nodeType":"311","endLine":110,"endColumn":17},{"ruleId":"265","severity":1,"message":"312","line":17,"column":9,"nodeType":"267","messageId":"268","endLine":17,"endColumn":20},{"ruleId":"265","severity":1,"message":"313","line":41,"column":10,"nodeType":"267","messageId":"268","endLine":41,"endColumn":18},{"ruleId":"265","severity":1,"message":"314","line":41,"column":20,"nodeType":"267","messageId":"268","endLine":41,"endColumn":31},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"265","severity":1,"message":"315","line":191,"column":11,"nodeType":"267","messageId":"268","endLine":191,"endColumn":19},{"ruleId":"265","severity":1,"message":"290","line":7,"column":8,"nodeType":"267","messageId":"268","endLine":7,"endColumn":18},{"ruleId":"265","severity":1,"message":"316","line":8,"column":26,"nodeType":"267","messageId":"268","endLine":8,"endColumn":41},{"ruleId":"265","severity":1,"message":"273","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":11},{"ruleId":"265","severity":1,"message":"274","line":13,"column":8,"nodeType":"267","messageId":"268","endLine":13,"endColumn":15},{"ruleId":"265","severity":1,"message":"292","line":58,"column":9,"nodeType":"267","messageId":"268","endLine":58,"endColumn":30},{"ruleId":"265","severity":1,"message":"290","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":18},{"ruleId":"265","severity":1,"message":"316","line":7,"column":26,"nodeType":"267","messageId":"268","endLine":7,"endColumn":41},{"ruleId":"265","severity":1,"message":"273","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":11},{"ruleId":"265","severity":1,"message":"274","line":13,"column":8,"nodeType":"267","messageId":"268","endLine":13,"endColumn":15},{"ruleId":"282","severity":1,"message":"317","line":35,"column":8,"nodeType":"284","endLine":35,"endColumn":20,"suggestions":"318"},{"ruleId":"265","severity":1,"message":"292","line":55,"column":9,"nodeType":"267","messageId":"268","endLine":55,"endColumn":30},{"ruleId":"269","replacedBy":"319"},{"ruleId":"271","replacedBy":"320"},{"ruleId":"265","severity":1,"message":"321","line":5,"column":9,"nodeType":"267","messageId":"268","endLine":5,"endColumn":22},{"ruleId":"265","severity":1,"message":"322","line":5,"column":24,"nodeType":"267","messageId":"268","endLine":5,"endColumn":42},{"ruleId":"265","severity":1,"message":"323","line":6,"column":9,"nodeType":"267","messageId":"268","endLine":6,"endColumn":18},{"ruleId":"282","severity":1,"message":"324","line":18,"column":7,"nodeType":"284","endLine":18,"endColumn":9,"suggestions":"325"},{"ruleId":"265","severity":1,"message":"326","line":1,"column":38,"nodeType":"267","messageId":"268","endLine":1,"endColumn":47},{"ruleId":"265","severity":1,"message":"327","line":4,"column":8,"nodeType":"267","messageId":"268","endLine":4,"endColumn":12},{"ruleId":"265","severity":1,"message":"328","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":16},{"ruleId":"265","severity":1,"message":"329","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":27},{"ruleId":"265","severity":1,"message":"321","line":11,"column":9,"nodeType":"267","messageId":"268","endLine":11,"endColumn":22},{"ruleId":"265","severity":1,"message":"322","line":11,"column":24,"nodeType":"267","messageId":"268","endLine":11,"endColumn":42},{"ruleId":"265","severity":1,"message":"305","line":25,"column":12,"nodeType":"267","messageId":"268","endLine":25,"endColumn":20},{"ruleId":"265","severity":1,"message":"326","line":1,"column":16,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"330","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":18},{"ruleId":"265","severity":1,"message":"331","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":18},{"ruleId":"265","severity":1,"message":"332","line":10,"column":12,"nodeType":"267","messageId":"268","endLine":10,"endColumn":18},{"ruleId":"265","severity":1,"message":"333","line":10,"column":20,"nodeType":"267","messageId":"268","endLine":10,"endColumn":29},{"ruleId":"265","severity":1,"message":"334","line":15,"column":11,"nodeType":"267","messageId":"268","endLine":15,"endColumn":23},{"ruleId":"335","severity":1,"message":"336","line":5,"column":22,"nodeType":"267","messageId":"268","endLine":5,"endColumn":27},{"ruleId":"335","severity":1,"message":"293","line":36,"column":11,"nodeType":"267","messageId":"268","endLine":36,"endColumn":18},{"ruleId":"282","severity":1,"message":"337","line":38,"column":15,"nodeType":"338","endLine":57,"endColumn":6},{"ruleId":"335","severity":1,"message":"336","line":4,"column":22,"nodeType":"267","messageId":"268","endLine":4,"endColumn":27},{"ruleId":"335","severity":1,"message":"339","line":33,"column":12,"nodeType":"267","messageId":"268","endLine":33,"endColumn":25},{"ruleId":"335","severity":1,"message":"293","line":36,"column":11,"nodeType":"267","messageId":"268","endLine":36,"endColumn":18},{"ruleId":"282","severity":1,"message":"337","line":38,"column":15,"nodeType":"338","endLine":57,"endColumn":6},"@typescript-eslint/no-unused-vars","'TicketProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["340"],"no-negated-in-lhs",["341"],"'Fab' is defined but never used.","'AddIcon' is defined but never used.","'useHistory' is defined but never used.","'Badge' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'tickets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTickets'. Either include it or remove the dependency array.","ArrayExpression",["342"],"'Button' is defined but never used.","'auth' is defined but never used.","'FormHelperText' is defined but never used.","'css' is defined but never used.","'jwt_decode' is defined but never used.","'getUserCredentials' is defined but never used.","'handleCreateNewTicket' is assigned a value but never used.","'classes' is assigned a value but never used.","'Chip' is defined but never used.","'getCommentByTicketId' is defined but never used.","'classes' is defined but never used.","'AutoSizer' is defined but never used.","'NewComment' is defined but never used.","'TicketContext' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'CheckCircleIcon' is defined but never used.","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'statusIsChanged' is assigned a value but never used.","'dateCreated' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'getUserName' is defined but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'response' is assigned a value but never used.","'UserRoleContext' is defined but never used.","React Hook useEffect has missing dependencies: 'setUserName' and 'userName'. Either include them or remove the dependency array.",["343"],["340"],["341"],"'getTicketById' is defined but never used.","'changeTicketStatus' is defined but never used.","'alterInMs' is defined but never used.","React Hook useEffect has missing dependencies: 'setComments' and 'ticketID'. Either include them or remove the dependency array.",["344"],"'useEffect' is defined but never used.","'Icon' is defined but never used.","'SaveIcon' is defined but never used.","'isNullOrUndefined' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'ticket' is assigned a value but never used.","'setTicket' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","no-unused-vars","'Theme' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'closedTickets' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [setTickets, title]",{"range":"351","text":"352"},"Update the dependencies array to be: [setTickets, setUserName, userName]",{"range":"353","text":"354"},"Update the dependencies array to be: [setComments, ticketID]",{"range":"355","text":"356"},[3882,3889],"[setTickets, title]",[1534,1546],"[setTickets, setUserName, userName]",[610,612],"[setComments, ticketID]"]